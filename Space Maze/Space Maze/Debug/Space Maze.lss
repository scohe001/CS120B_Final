
Space Maze.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00001be2  00800100  000017b4  00001848  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017b4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000166  00801ce2  00801ce2  0000342a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000342a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000345c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000168  00000000  00000000  0000349c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000016aa  00000000  00000000  00003604  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000415  00000000  00000000  00004cae  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e29  00000000  00000000  000050c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000444  00000000  00000000  00005eec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000858  00000000  00000000  00006330  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ff6  00000000  00000000  00006b88  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  00007b7e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	09 c2       	rjmp	.+1042   	; 0x438 <__vector_9>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	1c e1       	ldi	r17, 0x1C	; 28
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e4 eb       	ldi	r30, 0xB4	; 180
      a0:	f7 e1       	ldi	r31, 0x17	; 23
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a2 3e       	cpi	r26, 0xE2	; 226
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	2e e1       	ldi	r18, 0x1E	; 30
      b4:	a2 ee       	ldi	r26, 0xE2	; 226
      b6:	bc e1       	ldi	r27, 0x1C	; 28
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a8 34       	cpi	r26, 0x48	; 72
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	6e d7       	rcall	.+3804   	; 0xfa0 <main>
      c4:	0c 94 d8 0b 	jmp	0x17b0	; 0x17b0 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <initUSART>:
void PWM_off() {
	TCCR3A = 0x00;
	TCCR3B = 0x00;
	
	TCCR1A = 0x00;
	TCCR1B = 0x00;
      ca:	81 30       	cpi	r24, 0x01	; 1
      cc:	81 f0       	breq	.+32     	; 0xee <initUSART+0x24>
      ce:	e1 ec       	ldi	r30, 0xC1	; 193
      d0:	f0 e0       	ldi	r31, 0x00	; 0
      d2:	80 81       	ld	r24, Z
      d4:	88 61       	ori	r24, 0x18	; 24
      d6:	80 83       	st	Z, r24
      d8:	e2 ec       	ldi	r30, 0xC2	; 194
      da:	f0 e0       	ldi	r31, 0x00	; 0
      dc:	80 81       	ld	r24, Z
      de:	86 60       	ori	r24, 0x06	; 6
      e0:	80 83       	st	Z, r24
      e2:	8f ec       	ldi	r24, 0xCF	; 207
      e4:	80 93 c4 00 	sts	0x00C4, r24
      e8:	10 92 c5 00 	sts	0x00C5, r1
      ec:	08 95       	ret
      ee:	e9 ec       	ldi	r30, 0xC9	; 201
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	80 81       	ld	r24, Z
      f4:	88 61       	ori	r24, 0x18	; 24
      f6:	80 83       	st	Z, r24
      f8:	ea ec       	ldi	r30, 0xCA	; 202
      fa:	f0 e0       	ldi	r31, 0x00	; 0
      fc:	80 81       	ld	r24, Z
      fe:	86 60       	ori	r24, 0x06	; 6
     100:	80 83       	st	Z, r24
     102:	8f ec       	ldi	r24, 0xCF	; 207
     104:	80 93 cc 00 	sts	0x00CC, r24
     108:	10 92 cd 00 	sts	0x00CD, r1
     10c:	08 95       	ret

0000010e <USART_Flush>:
     10e:	81 30       	cpi	r24, 0x01	; 1
     110:	29 f4       	brne	.+10     	; 0x11c <USART_Flush+0xe>
     112:	80 91 c8 00 	lds	r24, 0x00C8
     116:	88 23       	and	r24, r24
     118:	84 f0       	brlt	.+32     	; 0x13a <USART_Flush+0x2c>
     11a:	08 95       	ret
     11c:	80 91 c0 00 	lds	r24, 0x00C0
     120:	88 23       	and	r24, r24
     122:	ac f4       	brge	.+42     	; 0x14e <USART_Flush+0x40>
     124:	a6 ec       	ldi	r26, 0xC6	; 198
     126:	b0 e0       	ldi	r27, 0x00	; 0
     128:	e0 ec       	ldi	r30, 0xC0	; 192
     12a:	f0 e0       	ldi	r31, 0x00	; 0
     12c:	8c 91       	ld	r24, X
     12e:	80 93 eb 1c 	sts	0x1CEB, r24
     132:	80 81       	ld	r24, Z
     134:	88 23       	and	r24, r24
     136:	d4 f3       	brlt	.-12     	; 0x12c <USART_Flush+0x1e>
     138:	08 95       	ret
     13a:	ae ec       	ldi	r26, 0xCE	; 206
     13c:	b0 e0       	ldi	r27, 0x00	; 0
     13e:	e8 ec       	ldi	r30, 0xC8	; 200
     140:	f0 e0       	ldi	r31, 0x00	; 0
     142:	8c 91       	ld	r24, X
     144:	80 93 eb 1c 	sts	0x1CEB, r24
     148:	80 81       	ld	r24, Z
     14a:	88 23       	and	r24, r24
     14c:	d4 f3       	brlt	.-12     	; 0x142 <USART_Flush+0x34>
     14e:	08 95       	ret

00000150 <USART_Send>:
     150:	61 30       	cpi	r22, 0x01	; 1
     152:	41 f0       	breq	.+16     	; 0x164 <USART_Send+0x14>
     154:	e0 ec       	ldi	r30, 0xC0	; 192
     156:	f0 e0       	ldi	r31, 0x00	; 0
     158:	90 81       	ld	r25, Z
     15a:	95 ff       	sbrs	r25, 5
     15c:	fd cf       	rjmp	.-6      	; 0x158 <USART_Send+0x8>
     15e:	80 93 c6 00 	sts	0x00C6, r24
     162:	08 95       	ret
     164:	e8 ec       	ldi	r30, 0xC8	; 200
     166:	f0 e0       	ldi	r31, 0x00	; 0
     168:	90 81       	ld	r25, Z
     16a:	95 ff       	sbrs	r25, 5
     16c:	fd cf       	rjmp	.-6      	; 0x168 <USART_Send+0x18>
     16e:	80 93 ce 00 	sts	0x00CE, r24
     172:	08 95       	ret

00000174 <sendArduino>:
     174:	e0 ec       	ldi	r30, 0xC0	; 192
     176:	f0 e0       	ldi	r31, 0x00	; 0
     178:	90 81       	ld	r25, Z
     17a:	95 ff       	sbrs	r25, 5
     17c:	fd cf       	rjmp	.-6      	; 0x178 <sendArduino+0x4>
     17e:	60 e0       	ldi	r22, 0x00	; 0
     180:	e7 df       	rcall	.-50     	; 0x150 <USART_Send>
     182:	e0 ec       	ldi	r30, 0xC0	; 192
     184:	f0 e0       	ldi	r31, 0x00	; 0
     186:	80 81       	ld	r24, Z
     188:	86 ff       	sbrs	r24, 6
     18a:	fd cf       	rjmp	.-6      	; 0x186 <sendArduino+0x12>
     18c:	00 00       	nop
     18e:	08 95       	ret

00000190 <clearScreen>:
     190:	80 e0       	ldi	r24, 0x00	; 0
     192:	f0 cf       	rjmp	.-32     	; 0x174 <sendArduino>
     194:	08 95       	ret

00000196 <drawBox>:
     196:	cf 93       	push	r28
     198:	df 93       	push	r29
     19a:	c8 2f       	mov	r28, r24
     19c:	d6 2f       	mov	r29, r22
     19e:	20 e2       	ldi	r18, 0x20	; 32
     1a0:	42 9f       	mul	r20, r18
     1a2:	c0 01       	movw	r24, r0
     1a4:	11 24       	eor	r1, r1
     1a6:	82 60       	ori	r24, 0x02	; 2
     1a8:	e5 df       	rcall	.-54     	; 0x174 <sendArduino>
     1aa:	8d 2f       	mov	r24, r29
     1ac:	e3 df       	rcall	.-58     	; 0x174 <sendArduino>
     1ae:	8c 2f       	mov	r24, r28
     1b0:	e1 df       	rcall	.-62     	; 0x174 <sendArduino>
     1b2:	df 91       	pop	r29
     1b4:	cf 91       	pop	r28
     1b6:	08 95       	ret

000001b8 <sendWin>:
     1b8:	cf 93       	push	r28
     1ba:	df 93       	push	r29
     1bc:	c8 2f       	mov	r28, r24
     1be:	d6 2f       	mov	r29, r22
     1c0:	85 e0       	ldi	r24, 0x05	; 5
     1c2:	d8 df       	rcall	.-80     	; 0x174 <sendArduino>
     1c4:	8d 2f       	mov	r24, r29
     1c6:	d6 df       	rcall	.-84     	; 0x174 <sendArduino>
     1c8:	8c 2f       	mov	r24, r28
     1ca:	d4 df       	rcall	.-88     	; 0x174 <sendArduino>
     1cc:	df 91       	pop	r29
     1ce:	cf 91       	pop	r28
     1d0:	08 95       	ret

000001d2 <sendLoss>:
     1d2:	cf 93       	push	r28
     1d4:	df 93       	push	r29
     1d6:	c8 2f       	mov	r28, r24
     1d8:	d6 2f       	mov	r29, r22
     1da:	84 e0       	ldi	r24, 0x04	; 4
     1dc:	cb df       	rcall	.-106    	; 0x174 <sendArduino>
     1de:	8d 2f       	mov	r24, r29
     1e0:	c9 df       	rcall	.-110    	; 0x174 <sendArduino>
     1e2:	8c 2f       	mov	r24, r28
     1e4:	c7 df       	rcall	.-114    	; 0x174 <sendArduino>
     1e6:	df 91       	pop	r29
     1e8:	cf 91       	pop	r28
     1ea:	08 95       	ret

000001ec <joystickInit>:
     1ec:	ea e7       	ldi	r30, 0x7A	; 122
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	80 81       	ld	r24, Z
     1f2:	80 6c       	ori	r24, 0xC0	; 192
     1f4:	80 83       	st	Z, r24
     1f6:	10 92 6d 1d 	sts	0x1D6D, r1
     1fa:	10 92 6c 1d 	sts	0x1D6C, r1
     1fe:	10 92 48 1d 	sts	0x1D48, r1
     202:	10 92 47 1d 	sts	0x1D47, r1
     206:	08 95       	ret

00000208 <joystickSample>:
     208:	2f 92       	push	r2
     20a:	3f 92       	push	r3
     20c:	4f 92       	push	r4
     20e:	5f 92       	push	r5
     210:	6f 92       	push	r6
     212:	7f 92       	push	r7
     214:	8f 92       	push	r8
     216:	9f 92       	push	r9
     218:	af 92       	push	r10
     21a:	bf 92       	push	r11
     21c:	cf 92       	push	r12
     21e:	df 92       	push	r13
     220:	ef 92       	push	r14
     222:	ff 92       	push	r15
     224:	0f 93       	push	r16
     226:	1f 93       	push	r17
     228:	cf 93       	push	r28
     22a:	df 93       	push	r29
     22c:	cd b7       	in	r28, 0x3d	; 61
     22e:	de b7       	in	r29, 0x3e	; 62
     230:	61 97       	sbiw	r28, 0x11	; 17
     232:	0f b6       	in	r0, 0x3f	; 63
     234:	f8 94       	cli
     236:	de bf       	out	0x3e, r29	; 62
     238:	0f be       	out	0x3f, r0	; 63
     23a:	cd bf       	out	0x3d, r28	; 61
     23c:	ea e7       	ldi	r30, 0x7A	; 122
     23e:	f0 e0       	ldi	r31, 0x00	; 0
     240:	80 81       	ld	r24, Z
     242:	80 64       	ori	r24, 0x40	; 64
     244:	80 83       	st	Z, r24
     246:	80 81       	ld	r24, Z
     248:	86 fd       	sbrc	r24, 6
     24a:	fd cf       	rjmp	.-6      	; 0x246 <joystickSample+0x3e>
     24c:	80 91 78 00 	lds	r24, 0x0078
     250:	90 91 79 00 	lds	r25, 0x0079
     254:	90 93 6d 1d 	sts	0x1D6D, r25
     258:	80 93 6c 1d 	sts	0x1D6C, r24
     25c:	ec e7       	ldi	r30, 0x7C	; 124
     25e:	f0 e0       	ldi	r31, 0x00	; 0
     260:	80 81       	ld	r24, Z
     262:	81 60       	ori	r24, 0x01	; 1
     264:	80 83       	st	Z, r24
     266:	ea e7       	ldi	r30, 0x7A	; 122
     268:	f0 e0       	ldi	r31, 0x00	; 0
     26a:	80 81       	ld	r24, Z
     26c:	80 64       	ori	r24, 0x40	; 64
     26e:	80 83       	st	Z, r24
     270:	80 81       	ld	r24, Z
     272:	86 fd       	sbrc	r24, 6
     274:	fd cf       	rjmp	.-6      	; 0x270 <joystickSample+0x68>
     276:	80 91 78 00 	lds	r24, 0x0078
     27a:	90 91 79 00 	lds	r25, 0x0079
     27e:	90 93 48 1d 	sts	0x1D48, r25
     282:	80 93 47 1d 	sts	0x1D47, r24
     286:	ec e7       	ldi	r30, 0x7C	; 124
     288:	f0 e0       	ldi	r31, 0x00	; 0
     28a:	80 81       	ld	r24, Z
     28c:	8e 7f       	andi	r24, 0xFE	; 254
     28e:	80 83       	st	Z, r24
     290:	40 90 6c 1d 	lds	r4, 0x1D6C
     294:	50 90 6d 1d 	lds	r5, 0x1D6D
     298:	20 ef       	ldi	r18, 0xF0	; 240
     29a:	42 1a       	sub	r4, r18
     29c:	21 e0       	ldi	r18, 0x01	; 1
     29e:	52 0a       	sbc	r5, r18
     2a0:	50 92 6d 1d 	sts	0x1D6D, r5
     2a4:	40 92 6c 1d 	sts	0x1D6C, r4
     2a8:	60 90 47 1d 	lds	r6, 0x1D47
     2ac:	70 90 48 1d 	lds	r7, 0x1D48
     2b0:	3c e0       	ldi	r19, 0x0C	; 12
     2b2:	63 1a       	sub	r6, r19
     2b4:	32 e0       	ldi	r19, 0x02	; 2
     2b6:	73 0a       	sbc	r7, r19
     2b8:	70 92 48 1d 	sts	0x1D48, r7
     2bc:	60 92 47 1d 	sts	0x1D47, r6
     2c0:	95 2d       	mov	r25, r5
     2c2:	99 0f       	add	r25, r25
     2c4:	99 0b       	sbc	r25, r25
     2c6:	97 2c       	mov	r9, r7
     2c8:	99 0c       	add	r9, r9
     2ca:	99 08       	sbc	r9, r9
     2cc:	a4 2c       	mov	r10, r4
     2ce:	b5 2c       	mov	r11, r5
     2d0:	c9 2e       	mov	r12, r25
     2d2:	d9 2e       	mov	r13, r25
     2d4:	e9 2e       	mov	r14, r25
     2d6:	f9 2e       	mov	r15, r25
     2d8:	09 2f       	mov	r16, r25
     2da:	19 2f       	mov	r17, r25
     2dc:	24 2d       	mov	r18, r4
     2de:	35 2d       	mov	r19, r5
     2e0:	49 2f       	mov	r20, r25
     2e2:	59 2f       	mov	r21, r25
     2e4:	69 2f       	mov	r22, r25
     2e6:	79 2f       	mov	r23, r25
     2e8:	89 2f       	mov	r24, r25
     2ea:	0e 94 42 0a 	call	0x1484	; 0x1484 <__muldi3>
     2ee:	22 2e       	mov	r2, r18
     2f0:	33 2e       	mov	r3, r19
     2f2:	84 2e       	mov	r8, r20
     2f4:	5d 87       	std	Y+13, r21	; 0x0d
     2f6:	6e 87       	std	Y+14, r22	; 0x0e
     2f8:	7f 87       	std	Y+15, r23	; 0x0f
     2fa:	88 8b       	std	Y+16, r24	; 0x10
     2fc:	99 8b       	std	Y+17, r25	; 0x11
     2fe:	a6 2c       	mov	r10, r6
     300:	b7 2c       	mov	r11, r7
     302:	c9 2c       	mov	r12, r9
     304:	d9 2c       	mov	r13, r9
     306:	e9 2c       	mov	r14, r9
     308:	f9 2c       	mov	r15, r9
     30a:	09 2d       	mov	r16, r9
     30c:	19 2d       	mov	r17, r9
     30e:	26 2d       	mov	r18, r6
     310:	37 2d       	mov	r19, r7
     312:	49 2d       	mov	r20, r9
     314:	59 2d       	mov	r21, r9
     316:	69 2d       	mov	r22, r9
     318:	79 2d       	mov	r23, r9
     31a:	89 2d       	mov	r24, r9
     31c:	99 2d       	mov	r25, r9
     31e:	0e 94 42 0a 	call	0x1484	; 0x1484 <__muldi3>
     322:	a2 2e       	mov	r10, r18
     324:	b3 2e       	mov	r11, r19
     326:	c4 2e       	mov	r12, r20
     328:	d5 2e       	mov	r13, r21
     32a:	e6 2e       	mov	r14, r22
     32c:	f7 2e       	mov	r15, r23
     32e:	08 2f       	mov	r16, r24
     330:	19 2f       	mov	r17, r25
     332:	22 2d       	mov	r18, r2
     334:	33 2d       	mov	r19, r3
     336:	48 2d       	mov	r20, r8
     338:	5d 85       	ldd	r21, Y+13	; 0x0d
     33a:	6e 85       	ldd	r22, Y+14	; 0x0e
     33c:	7f 85       	ldd	r23, Y+15	; 0x0f
     33e:	88 89       	ldd	r24, Y+16	; 0x10
     340:	99 89       	ldd	r25, Y+17	; 0x11
     342:	0e 94 93 0a 	call	0x1526	; 0x1526 <__adddi3>
     346:	2f 3f       	cpi	r18, 0xFF	; 255
     348:	3f 4f       	sbci	r19, 0xFF	; 255
     34a:	41 05       	cpc	r20, r1
     34c:	51 05       	cpc	r21, r1
     34e:	61 05       	cpc	r22, r1
     350:	71 05       	cpc	r23, r1
     352:	81 05       	cpc	r24, r1
     354:	91 05       	cpc	r25, r1
     356:	09 f0       	breq	.+2      	; 0x35a <joystickSample+0x152>
     358:	1c f4       	brge	.+6      	; 0x360 <joystickSample+0x158>
     35a:	10 92 d0 1d 	sts	0x1DD0, r1
     35e:	35 c0       	rjmp	.+106    	; 0x3ca <joystickSample+0x1c2>
     360:	81 e0       	ldi	r24, 0x01	; 1
     362:	89 83       	std	Y+1, r24	; 0x01
     364:	82 e0       	ldi	r24, 0x02	; 2
     366:	8a 83       	std	Y+2, r24	; 0x02
     368:	83 e0       	ldi	r24, 0x03	; 3
     36a:	8b 83       	std	Y+3, r24	; 0x03
     36c:	84 e0       	ldi	r24, 0x04	; 4
     36e:	8c 83       	std	Y+4, r24	; 0x04
     370:	5e 82       	std	Y+6, r5	; 0x06
     372:	4d 82       	std	Y+5, r4	; 0x05
     374:	51 94       	neg	r5
     376:	41 94       	neg	r4
     378:	51 08       	sbc	r5, r1
     37a:	58 86       	std	Y+8, r5	; 0x08
     37c:	4f 82       	std	Y+7, r4	; 0x07
     37e:	7a 86       	std	Y+10, r7	; 0x0a
     380:	69 86       	std	Y+9, r6	; 0x09
     382:	71 94       	neg	r7
     384:	61 94       	neg	r6
     386:	71 08       	sbc	r7, r1
     388:	7c 86       	std	Y+12, r7	; 0x0c
     38a:	6b 86       	std	Y+11, r6	; 0x0b
     38c:	de 01       	movw	r26, r28
     38e:	17 96       	adiw	r26, 0x07	; 7
     390:	81 e0       	ldi	r24, 0x01	; 1
     392:	90 e0       	ldi	r25, 0x00	; 0
     394:	4d 91       	ld	r20, X+
     396:	5d 91       	ld	r21, X+
     398:	e9 2f       	mov	r30, r25
     39a:	f0 e0       	ldi	r31, 0x00	; 0
     39c:	ee 0f       	add	r30, r30
     39e:	ff 1f       	adc	r31, r31
     3a0:	21 e0       	ldi	r18, 0x01	; 1
     3a2:	30 e0       	ldi	r19, 0x00	; 0
     3a4:	2c 0f       	add	r18, r28
     3a6:	3d 1f       	adc	r19, r29
     3a8:	e2 0f       	add	r30, r18
     3aa:	f3 1f       	adc	r31, r19
     3ac:	24 81       	ldd	r18, Z+4	; 0x04
     3ae:	35 81       	ldd	r19, Z+5	; 0x05
     3b0:	24 17       	cp	r18, r20
     3b2:	35 07       	cpc	r19, r21
     3b4:	0c f4       	brge	.+2      	; 0x3b8 <joystickSample+0x1b0>
     3b6:	98 2f       	mov	r25, r24
     3b8:	8f 5f       	subi	r24, 0xFF	; 255
     3ba:	84 30       	cpi	r24, 0x04	; 4
     3bc:	59 f7       	brne	.-42     	; 0x394 <joystickSample+0x18c>
     3be:	fe 01       	movw	r30, r28
     3c0:	e9 0f       	add	r30, r25
     3c2:	f1 1d       	adc	r31, r1
     3c4:	81 81       	ldd	r24, Z+1	; 0x01
     3c6:	80 93 d0 1d 	sts	0x1DD0, r24
     3ca:	61 96       	adiw	r28, 0x11	; 17
     3cc:	0f b6       	in	r0, 0x3f	; 63
     3ce:	f8 94       	cli
     3d0:	de bf       	out	0x3e, r29	; 62
     3d2:	0f be       	out	0x3f, r0	; 63
     3d4:	cd bf       	out	0x3d, r28	; 61
     3d6:	df 91       	pop	r29
     3d8:	cf 91       	pop	r28
     3da:	1f 91       	pop	r17
     3dc:	0f 91       	pop	r16
     3de:	ff 90       	pop	r15
     3e0:	ef 90       	pop	r14
     3e2:	df 90       	pop	r13
     3e4:	cf 90       	pop	r12
     3e6:	bf 90       	pop	r11
     3e8:	af 90       	pop	r10
     3ea:	9f 90       	pop	r9
     3ec:	8f 90       	pop	r8
     3ee:	7f 90       	pop	r7
     3f0:	6f 90       	pop	r6
     3f2:	5f 90       	pop	r5
     3f4:	4f 90       	pop	r4
     3f6:	3f 90       	pop	r3
     3f8:	2f 90       	pop	r2
     3fa:	08 95       	ret

000003fc <TimerOn>:
     3fc:	8b e0       	ldi	r24, 0x0B	; 11
     3fe:	80 93 b1 00 	sts	0x00B1, r24
     402:	8d e7       	ldi	r24, 0x7D	; 125
     404:	80 93 b3 00 	sts	0x00B3, r24
     408:	82 e0       	ldi	r24, 0x02	; 2
     40a:	80 93 70 00 	sts	0x0070, r24
     40e:	10 92 b2 00 	sts	0x00B2, r1
     412:	80 91 97 17 	lds	r24, 0x1797
     416:	90 91 98 17 	lds	r25, 0x1798
     41a:	a0 91 99 17 	lds	r26, 0x1799
     41e:	b0 91 9a 17 	lds	r27, 0x179A
     422:	80 93 f9 1c 	sts	0x1CF9, r24
     426:	90 93 fa 1c 	sts	0x1CFA, r25
     42a:	a0 93 fb 1c 	sts	0x1CFB, r26
     42e:	b0 93 fc 1c 	sts	0x1CFC, r27
     432:	80 e8       	ldi	r24, 0x80	; 128
     434:	8f bf       	out	0x3f, r24	; 63
     436:	08 95       	ret

00000438 <__vector_9>:
     438:	1f 92       	push	r1
     43a:	0f 92       	push	r0
     43c:	0f b6       	in	r0, 0x3f	; 63
     43e:	0f 92       	push	r0
     440:	11 24       	eor	r1, r1
     442:	8f 93       	push	r24
     444:	9f 93       	push	r25
     446:	af 93       	push	r26
     448:	bf 93       	push	r27
     44a:	80 91 f9 1c 	lds	r24, 0x1CF9
     44e:	90 91 fa 1c 	lds	r25, 0x1CFA
     452:	a0 91 fb 1c 	lds	r26, 0x1CFB
     456:	b0 91 fc 1c 	lds	r27, 0x1CFC
     45a:	01 97       	sbiw	r24, 0x01	; 1
     45c:	a1 09       	sbc	r26, r1
     45e:	b1 09       	sbc	r27, r1
     460:	80 93 f9 1c 	sts	0x1CF9, r24
     464:	90 93 fa 1c 	sts	0x1CFA, r25
     468:	a0 93 fb 1c 	sts	0x1CFB, r26
     46c:	b0 93 fc 1c 	sts	0x1CFC, r27
     470:	89 2b       	or	r24, r25
     472:	8a 2b       	or	r24, r26
     474:	8b 2b       	or	r24, r27
     476:	99 f4       	brne	.+38     	; 0x49e <__vector_9+0x66>
     478:	81 e0       	ldi	r24, 0x01	; 1
     47a:	80 93 fd 1c 	sts	0x1CFD, r24
     47e:	80 91 97 17 	lds	r24, 0x1797
     482:	90 91 98 17 	lds	r25, 0x1798
     486:	a0 91 99 17 	lds	r26, 0x1799
     48a:	b0 91 9a 17 	lds	r27, 0x179A
     48e:	80 93 f9 1c 	sts	0x1CF9, r24
     492:	90 93 fa 1c 	sts	0x1CFA, r25
     496:	a0 93 fb 1c 	sts	0x1CFB, r26
     49a:	b0 93 fc 1c 	sts	0x1CFC, r27
     49e:	bf 91       	pop	r27
     4a0:	af 91       	pop	r26
     4a2:	9f 91       	pop	r25
     4a4:	8f 91       	pop	r24
     4a6:	0f 90       	pop	r0
     4a8:	0f be       	out	0x3f, r0	; 63
     4aa:	0f 90       	pop	r0
     4ac:	1f 90       	pop	r1
     4ae:	18 95       	reti

000004b0 <QueueInit>:
     4b0:	1f 93       	push	r17
     4b2:	cf 93       	push	r28
     4b4:	df 93       	push	r29
     4b6:	18 2f       	mov	r17, r24
     4b8:	86 e0       	ldi	r24, 0x06	; 6
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	0e 94 ab 0a 	call	0x1556	; 0x1556 <malloc>
     4c0:	ec 01       	movw	r28, r24
     4c2:	81 2f       	mov	r24, r17
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	0e 94 ab 0a 	call	0x1556	; 0x1556 <malloc>
     4ca:	99 83       	std	Y+1, r25	; 0x01
     4cc:	88 83       	st	Y, r24
     4ce:	1a 82       	std	Y+2, r1	; 0x02
     4d0:	1b 82       	std	Y+3, r1	; 0x03
     4d2:	1c 82       	std	Y+4, r1	; 0x04
     4d4:	1d 83       	std	Y+5, r17	; 0x05
     4d6:	ce 01       	movw	r24, r28
     4d8:	df 91       	pop	r29
     4da:	cf 91       	pop	r28
     4dc:	1f 91       	pop	r17
     4de:	08 95       	ret

000004e0 <QueueEnqueue>:
     4e0:	fc 01       	movw	r30, r24
     4e2:	94 81       	ldd	r25, Z+4	; 0x04
     4e4:	85 81       	ldd	r24, Z+5	; 0x05
     4e6:	98 17       	cp	r25, r24
     4e8:	80 f4       	brcc	.+32     	; 0x50a <QueueEnqueue+0x2a>
     4ea:	83 81       	ldd	r24, Z+3	; 0x03
     4ec:	a0 81       	ld	r26, Z
     4ee:	b1 81       	ldd	r27, Z+1	; 0x01
     4f0:	a8 0f       	add	r26, r24
     4f2:	b1 1d       	adc	r27, r1
     4f4:	6c 93       	st	X, r22
     4f6:	83 81       	ldd	r24, Z+3	; 0x03
     4f8:	8f 5f       	subi	r24, 0xFF	; 255
     4fa:	65 81       	ldd	r22, Z+5	; 0x05
     4fc:	90 d7       	rcall	.+3872   	; 0x141e <__udivmodqi4>
     4fe:	93 83       	std	Z+3, r25	; 0x03
     500:	84 81       	ldd	r24, Z+4	; 0x04
     502:	8f 5f       	subi	r24, 0xFF	; 255
     504:	84 83       	std	Z+4, r24	; 0x04
     506:	80 e0       	ldi	r24, 0x00	; 0
     508:	08 95       	ret
     50a:	81 e0       	ldi	r24, 0x01	; 1
     50c:	08 95       	ret

0000050e <JoyTick>:
     50e:	00 97       	sbiw	r24, 0x00	; 0
     510:	21 f0       	breq	.+8      	; 0x51a <JoyTick+0xc>
     512:	81 30       	cpi	r24, 0x01	; 1
     514:	91 05       	cpc	r25, r1
     516:	69 f0       	breq	.+26     	; 0x532 <JoyTick+0x24>
     518:	08 95       	ret
     51a:	60 91 d0 1d 	lds	r22, 0x1DD0
     51e:	66 23       	and	r22, r22
     520:	89 f0       	breq	.+34     	; 0x544 <JoyTick+0x36>
     522:	80 91 9e 1d 	lds	r24, 0x1D9E
     526:	90 91 9f 1d 	lds	r25, 0x1D9F
     52a:	da df       	rcall	.-76     	; 0x4e0 <QueueEnqueue>
     52c:	81 e0       	ldi	r24, 0x01	; 1
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	08 95       	ret
     532:	31 e0       	ldi	r19, 0x01	; 1
     534:	20 e0       	ldi	r18, 0x00	; 0
     536:	80 91 d0 1d 	lds	r24, 0x1DD0
     53a:	81 11       	cpse	r24, r1
     53c:	01 c0       	rjmp	.+2      	; 0x540 <JoyTick+0x32>
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	83 2f       	mov	r24, r19
     542:	92 2f       	mov	r25, r18
     544:	08 95       	ret

00000546 <QueueDequeue>:
     546:	fc 01       	movw	r30, r24
     548:	84 81       	ldd	r24, Z+4	; 0x04
     54a:	88 23       	and	r24, r24
     54c:	81 f0       	breq	.+32     	; 0x56e <QueueDequeue+0x28>
     54e:	82 81       	ldd	r24, Z+2	; 0x02
     550:	a0 81       	ld	r26, Z
     552:	b1 81       	ldd	r27, Z+1	; 0x01
     554:	a8 0f       	add	r26, r24
     556:	b1 1d       	adc	r27, r1
     558:	2c 91       	ld	r18, X
     55a:	1c 92       	st	X, r1
     55c:	82 81       	ldd	r24, Z+2	; 0x02
     55e:	8f 5f       	subi	r24, 0xFF	; 255
     560:	65 81       	ldd	r22, Z+5	; 0x05
     562:	5d d7       	rcall	.+3770   	; 0x141e <__udivmodqi4>
     564:	92 83       	std	Z+2, r25	; 0x02
     566:	84 81       	ldd	r24, Z+4	; 0x04
     568:	81 50       	subi	r24, 0x01	; 1
     56a:	84 83       	std	Z+4, r24	; 0x04
     56c:	82 2f       	mov	r24, r18
     56e:	08 95       	ret

00000570 <playSong>:
     570:	cf 93       	push	r28
     572:	df 93       	push	r29
     574:	cd b7       	in	r28, 0x3d	; 61
     576:	de b7       	in	r29, 0x3e	; 62
     578:	87 e1       	ldi	r24, 0x17	; 23
     57a:	fe 01       	movw	r30, r28
     57c:	35 96       	adiw	r30, 0x05	; 5
     57e:	ae e2       	ldi	r26, 0x2E	; 46
     580:	bd e1       	ldi	r27, 0x1D	; 29
     582:	01 90       	ld	r0, Z+
     584:	0d 92       	st	X+, r0
     586:	8a 95       	dec	r24
     588:	e1 f7       	brne	.-8      	; 0x582 <playSong+0x12>
     58a:	ee e2       	ldi	r30, 0x2E	; 46
     58c:	fd e1       	ldi	r31, 0x1D	; 29
     58e:	16 86       	std	Z+14, r1	; 0x0e
     590:	15 86       	std	Z+13, r1	; 0x0d
     592:	12 8a       	std	Z+18, r1	; 0x12
     594:	11 8a       	std	Z+17, r1	; 0x11
     596:	10 8a       	std	Z+16, r1	; 0x10
     598:	17 86       	std	Z+15, r1	; 0x0f
     59a:	16 8a       	std	Z+22, r1	; 0x16
     59c:	15 8a       	std	Z+21, r1	; 0x15
     59e:	14 8a       	std	Z+20, r1	; 0x14
     5a0:	13 8a       	std	Z+19, r1	; 0x13
     5a2:	84 85       	ldd	r24, Z+12	; 0x0c
     5a4:	90 e0       	ldi	r25, 0x00	; 0
     5a6:	a0 e0       	ldi	r26, 0x00	; 0
     5a8:	b0 e0       	ldi	r27, 0x00	; 0
     5aa:	ec ea       	ldi	r30, 0xAC	; 172
     5ac:	fd e1       	ldi	r31, 0x1D	; 29
     5ae:	85 83       	std	Z+5, r24	; 0x05
     5b0:	96 83       	std	Z+6, r25	; 0x06
     5b2:	a7 83       	std	Z+7, r26	; 0x07
     5b4:	b0 87       	std	Z+8, r27	; 0x08
     5b6:	81 83       	std	Z+1, r24	; 0x01
     5b8:	92 83       	std	Z+2, r25	; 0x02
     5ba:	a3 83       	std	Z+3, r26	; 0x03
     5bc:	b4 83       	std	Z+4, r27	; 0x04
     5be:	df 91       	pop	r29
     5c0:	cf 91       	pop	r28
     5c2:	08 95       	ret

000005c4 <nextSong>:
     5c4:	cf 93       	push	r28
     5c6:	df 93       	push	r29
     5c8:	e0 91 ea 1c 	lds	r30, 0x1CEA
     5cc:	ce 2f       	mov	r28, r30
     5ce:	d0 e0       	ldi	r29, 0x00	; 0
     5d0:	87 e1       	ldi	r24, 0x17	; 23
     5d2:	e8 9f       	mul	r30, r24
     5d4:	f0 01       	movw	r30, r0
     5d6:	11 24       	eor	r1, r1
     5d8:	ef 52       	subi	r30, 0x2F	; 47
     5da:	f2 4e       	sbci	r31, 0xE2	; 226
     5dc:	8d b7       	in	r24, 0x3d	; 61
     5de:	9e b7       	in	r25, 0x3e	; 62
     5e0:	47 97       	sbiw	r24, 0x17	; 23
     5e2:	0f b6       	in	r0, 0x3f	; 63
     5e4:	f8 94       	cli
     5e6:	9e bf       	out	0x3e, r25	; 62
     5e8:	0f be       	out	0x3f, r0	; 63
     5ea:	8d bf       	out	0x3d, r24	; 61
     5ec:	ad b7       	in	r26, 0x3d	; 61
     5ee:	be b7       	in	r27, 0x3e	; 62
     5f0:	11 96       	adiw	r26, 0x01	; 1
     5f2:	87 e1       	ldi	r24, 0x17	; 23
     5f4:	01 90       	ld	r0, Z+
     5f6:	0d 92       	st	X+, r0
     5f8:	8a 95       	dec	r24
     5fa:	e1 f7       	brne	.-8      	; 0x5f4 <nextSong+0x30>
     5fc:	b9 df       	rcall	.-142    	; 0x570 <playSong>
     5fe:	ce 01       	movw	r24, r28
     600:	01 96       	adiw	r24, 0x01	; 1
     602:	63 e0       	ldi	r22, 0x03	; 3
     604:	70 e0       	ldi	r23, 0x00	; 0
     606:	2b d7       	rcall	.+3670   	; 0x145e <__divmodhi4>
     608:	80 93 ea 1c 	sts	0x1CEA, r24
     60c:	8d b7       	in	r24, 0x3d	; 61
     60e:	9e b7       	in	r25, 0x3e	; 62
     610:	47 96       	adiw	r24, 0x17	; 23
     612:	0f b6       	in	r0, 0x3f	; 63
     614:	f8 94       	cli
     616:	9e bf       	out	0x3e, r25	; 62
     618:	0f be       	out	0x3f, r0	; 63
     61a:	8d bf       	out	0x3d, r24	; 61
     61c:	df 91       	pop	r29
     61e:	cf 91       	pop	r28
     620:	08 95       	ret

00000622 <ManagerTick>:
     622:	20 b1       	in	r18, 0x00	; 0
     624:	20 95       	com	r18
     626:	81 30       	cpi	r24, 0x01	; 1
     628:	91 05       	cpc	r25, r1
     62a:	61 f0       	breq	.+24     	; 0x644 <ManagerTick+0x22>
     62c:	82 30       	cpi	r24, 0x02	; 2
     62e:	91 05       	cpc	r25, r1
     630:	b1 f0       	breq	.+44     	; 0x65e <ManagerTick+0x3c>
     632:	00 97       	sbiw	r24, 0x00	; 0
     634:	51 f5       	brne	.+84     	; 0x68a <ManagerTick+0x68>
     636:	22 ff       	sbrs	r18, 2
     638:	28 c0       	rjmp	.+80     	; 0x68a <ManagerTick+0x68>
     63a:	20 91 06 01 	lds	r18, 0x0106
     63e:	20 93 f0 1c 	sts	0x1CF0, r18
     642:	08 95       	ret
     644:	10 92 cf 1d 	sts	0x1DCF, r1
     648:	10 92 79 1d 	sts	0x1D79, r1
     64c:	22 ff       	sbrs	r18, 2
     64e:	1d c0       	rjmp	.+58     	; 0x68a <ManagerTick+0x68>
     650:	80 91 06 01 	lds	r24, 0x0106
     654:	80 93 f0 1c 	sts	0x1CF0, r24
     658:	80 e0       	ldi	r24, 0x00	; 0
     65a:	90 e0       	ldi	r25, 0x00	; 0
     65c:	08 95       	ret
     65e:	10 92 cf 1d 	sts	0x1DCF, r1
     662:	10 92 79 1d 	sts	0x1D79, r1
     666:	22 ff       	sbrs	r18, 2
     668:	10 c0       	rjmp	.+32     	; 0x68a <ManagerTick+0x68>
     66a:	ac df       	rcall	.-168    	; 0x5c4 <nextSong>
     66c:	80 91 06 01 	lds	r24, 0x0106
     670:	08 2e       	mov	r0, r24
     672:	00 0c       	add	r0, r0
     674:	99 0b       	sbc	r25, r25
     676:	01 96       	adiw	r24, 0x01	; 1
     678:	6a e0       	ldi	r22, 0x0A	; 10
     67a:	70 e0       	ldi	r23, 0x00	; 0
     67c:	f0 d6       	rcall	.+3552   	; 0x145e <__divmodhi4>
     67e:	80 93 06 01 	sts	0x0106, r24
     682:	80 93 f0 1c 	sts	0x1CF0, r24
     686:	80 e0       	ldi	r24, 0x00	; 0
     688:	90 e0       	ldi	r25, 0x00	; 0
     68a:	08 95       	ret

0000068c <set_PWM2>:
     68c:	cf 92       	push	r12
     68e:	df 92       	push	r13
     690:	ef 92       	push	r14
     692:	ff 92       	push	r15
     694:	6b 01       	movw	r12, r22
     696:	7c 01       	movw	r14, r24
     698:	20 91 e6 1c 	lds	r18, 0x1CE6
     69c:	30 91 e7 1c 	lds	r19, 0x1CE7
     6a0:	40 91 e8 1c 	lds	r20, 0x1CE8
     6a4:	50 91 e9 1c 	lds	r21, 0x1CE9
     6a8:	41 d5       	rcall	.+2690   	; 0x112c <__cmpsf2>
     6aa:	88 23       	and	r24, r24
     6ac:	09 f4       	brne	.+2      	; 0x6b0 <set_PWM2+0x24>
     6ae:	52 c0       	rjmp	.+164    	; 0x754 <set_PWM2+0xc8>
     6b0:	20 e0       	ldi	r18, 0x00	; 0
     6b2:	30 e0       	ldi	r19, 0x00	; 0
     6b4:	a9 01       	movw	r20, r18
     6b6:	c7 01       	movw	r24, r14
     6b8:	b6 01       	movw	r22, r12
     6ba:	38 d5       	rcall	.+2672   	; 0x112c <__cmpsf2>
     6bc:	81 11       	cpse	r24, r1
     6be:	06 c0       	rjmp	.+12     	; 0x6cc <set_PWM2+0x40>
     6c0:	e1 e8       	ldi	r30, 0x81	; 129
     6c2:	f0 e0       	ldi	r31, 0x00	; 0
     6c4:	80 81       	ld	r24, Z
     6c6:	88 70       	andi	r24, 0x08	; 8
     6c8:	80 83       	st	Z, r24
     6ca:	05 c0       	rjmp	.+10     	; 0x6d6 <set_PWM2+0x4a>
     6cc:	e1 e8       	ldi	r30, 0x81	; 129
     6ce:	f0 e0       	ldi	r31, 0x00	; 0
     6d0:	80 81       	ld	r24, Z
     6d2:	83 60       	ori	r24, 0x03	; 3
     6d4:	80 83       	st	Z, r24
     6d6:	28 e5       	ldi	r18, 0x58	; 88
     6d8:	39 e3       	ldi	r19, 0x39	; 57
     6da:	44 e7       	ldi	r20, 0x74	; 116
     6dc:	5f e3       	ldi	r21, 0x3F	; 63
     6de:	c7 01       	movw	r24, r14
     6e0:	b6 01       	movw	r22, r12
     6e2:	24 d5       	rcall	.+2632   	; 0x112c <__cmpsf2>
     6e4:	88 23       	and	r24, r24
     6e6:	3c f4       	brge	.+14     	; 0x6f6 <set_PWM2+0x6a>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	9f ef       	ldi	r25, 0xFF	; 255
     6ec:	90 93 89 00 	sts	0x0089, r25
     6f0:	80 93 88 00 	sts	0x0088, r24
     6f4:	23 c0       	rjmp	.+70     	; 0x73c <set_PWM2+0xb0>
     6f6:	20 e0       	ldi	r18, 0x00	; 0
     6f8:	34 e2       	ldi	r19, 0x24	; 36
     6fa:	44 ef       	ldi	r20, 0xF4	; 244
     6fc:	56 e4       	ldi	r21, 0x46	; 70
     6fe:	c7 01       	movw	r24, r14
     700:	b6 01       	movw	r22, r12
     702:	26 d6       	rcall	.+3148   	; 0x1350 <__gesf2>
     704:	18 16       	cp	r1, r24
     706:	2c f4       	brge	.+10     	; 0x712 <set_PWM2+0x86>
     708:	10 92 89 00 	sts	0x0089, r1
     70c:	10 92 88 00 	sts	0x0088, r1
     710:	15 c0       	rjmp	.+42     	; 0x73c <set_PWM2+0xb0>
     712:	20 e0       	ldi	r18, 0x00	; 0
     714:	30 e0       	ldi	r19, 0x00	; 0
     716:	40 e0       	ldi	r20, 0x00	; 0
     718:	53 e4       	ldi	r21, 0x43	; 67
     71a:	c7 01       	movw	r24, r14
     71c:	b6 01       	movw	r22, r12
     71e:	1c d6       	rcall	.+3128   	; 0x1358 <__mulsf3>
     720:	9b 01       	movw	r18, r22
     722:	ac 01       	movw	r20, r24
     724:	60 e0       	ldi	r22, 0x00	; 0
     726:	74 e2       	ldi	r23, 0x24	; 36
     728:	84 ef       	ldi	r24, 0xF4	; 244
     72a:	9a e4       	ldi	r25, 0x4A	; 74
     72c:	03 d5       	rcall	.+2566   	; 0x1134 <__divsf3>
     72e:	6a d5       	rcall	.+2772   	; 0x1204 <__fixsfsi>
     730:	61 50       	subi	r22, 0x01	; 1
     732:	71 09       	sbc	r23, r1
     734:	70 93 89 00 	sts	0x0089, r23
     738:	60 93 88 00 	sts	0x0088, r22
     73c:	10 92 85 00 	sts	0x0085, r1
     740:	10 92 84 00 	sts	0x0084, r1
     744:	c0 92 e6 1c 	sts	0x1CE6, r12
     748:	d0 92 e7 1c 	sts	0x1CE7, r13
     74c:	e0 92 e8 1c 	sts	0x1CE8, r14
     750:	f0 92 e9 1c 	sts	0x1CE9, r15
     754:	ff 90       	pop	r15
     756:	ef 90       	pop	r14
     758:	df 90       	pop	r13
     75a:	cf 90       	pop	r12
     75c:	08 95       	ret

0000075e <set_PWM1>:
     75e:	cf 92       	push	r12
     760:	df 92       	push	r13
     762:	ef 92       	push	r14
     764:	ff 92       	push	r15
     766:	6b 01       	movw	r12, r22
     768:	7c 01       	movw	r14, r24
     76a:	20 91 e2 1c 	lds	r18, 0x1CE2
     76e:	30 91 e3 1c 	lds	r19, 0x1CE3
     772:	40 91 e4 1c 	lds	r20, 0x1CE4
     776:	50 91 e5 1c 	lds	r21, 0x1CE5
     77a:	d8 d4       	rcall	.+2480   	; 0x112c <__cmpsf2>
     77c:	88 23       	and	r24, r24
     77e:	09 f4       	brne	.+2      	; 0x782 <set_PWM1+0x24>
     780:	52 c0       	rjmp	.+164    	; 0x826 <set_PWM1+0xc8>
     782:	20 e0       	ldi	r18, 0x00	; 0
     784:	30 e0       	ldi	r19, 0x00	; 0
     786:	a9 01       	movw	r20, r18
     788:	c7 01       	movw	r24, r14
     78a:	b6 01       	movw	r22, r12
     78c:	cf d4       	rcall	.+2462   	; 0x112c <__cmpsf2>
     78e:	81 11       	cpse	r24, r1
     790:	06 c0       	rjmp	.+12     	; 0x79e <set_PWM1+0x40>
     792:	e1 e9       	ldi	r30, 0x91	; 145
     794:	f0 e0       	ldi	r31, 0x00	; 0
     796:	80 81       	ld	r24, Z
     798:	88 70       	andi	r24, 0x08	; 8
     79a:	80 83       	st	Z, r24
     79c:	05 c0       	rjmp	.+10     	; 0x7a8 <set_PWM1+0x4a>
     79e:	e1 e9       	ldi	r30, 0x91	; 145
     7a0:	f0 e0       	ldi	r31, 0x00	; 0
     7a2:	80 81       	ld	r24, Z
     7a4:	83 60       	ori	r24, 0x03	; 3
     7a6:	80 83       	st	Z, r24
     7a8:	28 e5       	ldi	r18, 0x58	; 88
     7aa:	39 e3       	ldi	r19, 0x39	; 57
     7ac:	44 e7       	ldi	r20, 0x74	; 116
     7ae:	5f e3       	ldi	r21, 0x3F	; 63
     7b0:	c7 01       	movw	r24, r14
     7b2:	b6 01       	movw	r22, r12
     7b4:	bb d4       	rcall	.+2422   	; 0x112c <__cmpsf2>
     7b6:	88 23       	and	r24, r24
     7b8:	3c f4       	brge	.+14     	; 0x7c8 <set_PWM1+0x6a>
     7ba:	8f ef       	ldi	r24, 0xFF	; 255
     7bc:	9f ef       	ldi	r25, 0xFF	; 255
     7be:	90 93 99 00 	sts	0x0099, r25
     7c2:	80 93 98 00 	sts	0x0098, r24
     7c6:	23 c0       	rjmp	.+70     	; 0x80e <set_PWM1+0xb0>
     7c8:	20 e0       	ldi	r18, 0x00	; 0
     7ca:	34 e2       	ldi	r19, 0x24	; 36
     7cc:	44 ef       	ldi	r20, 0xF4	; 244
     7ce:	56 e4       	ldi	r21, 0x46	; 70
     7d0:	c7 01       	movw	r24, r14
     7d2:	b6 01       	movw	r22, r12
     7d4:	bd d5       	rcall	.+2938   	; 0x1350 <__gesf2>
     7d6:	18 16       	cp	r1, r24
     7d8:	2c f4       	brge	.+10     	; 0x7e4 <set_PWM1+0x86>
     7da:	10 92 99 00 	sts	0x0099, r1
     7de:	10 92 98 00 	sts	0x0098, r1
     7e2:	15 c0       	rjmp	.+42     	; 0x80e <set_PWM1+0xb0>
     7e4:	20 e0       	ldi	r18, 0x00	; 0
     7e6:	30 e0       	ldi	r19, 0x00	; 0
     7e8:	40 e0       	ldi	r20, 0x00	; 0
     7ea:	53 e4       	ldi	r21, 0x43	; 67
     7ec:	c7 01       	movw	r24, r14
     7ee:	b6 01       	movw	r22, r12
     7f0:	b3 d5       	rcall	.+2918   	; 0x1358 <__mulsf3>
     7f2:	9b 01       	movw	r18, r22
     7f4:	ac 01       	movw	r20, r24
     7f6:	60 e0       	ldi	r22, 0x00	; 0
     7f8:	74 e2       	ldi	r23, 0x24	; 36
     7fa:	84 ef       	ldi	r24, 0xF4	; 244
     7fc:	9a e4       	ldi	r25, 0x4A	; 74
     7fe:	9a d4       	rcall	.+2356   	; 0x1134 <__divsf3>
     800:	01 d5       	rcall	.+2562   	; 0x1204 <__fixsfsi>
     802:	61 50       	subi	r22, 0x01	; 1
     804:	71 09       	sbc	r23, r1
     806:	70 93 99 00 	sts	0x0099, r23
     80a:	60 93 98 00 	sts	0x0098, r22
     80e:	10 92 95 00 	sts	0x0095, r1
     812:	10 92 94 00 	sts	0x0094, r1
     816:	c0 92 e2 1c 	sts	0x1CE2, r12
     81a:	d0 92 e3 1c 	sts	0x1CE3, r13
     81e:	e0 92 e4 1c 	sts	0x1CE4, r14
     822:	f0 92 e5 1c 	sts	0x1CE5, r15
     826:	ff 90       	pop	r15
     828:	ef 90       	pop	r14
     82a:	df 90       	pop	r13
     82c:	cf 90       	pop	r12
     82e:	08 95       	ret

00000830 <PWM_on>:
     830:	cf 93       	push	r28
     832:	df 93       	push	r29
     834:	d0 e4       	ldi	r29, 0x40	; 64
     836:	d0 93 90 00 	sts	0x0090, r29
     83a:	cb e0       	ldi	r28, 0x0B	; 11
     83c:	c0 93 91 00 	sts	0x0091, r28
     840:	60 e0       	ldi	r22, 0x00	; 0
     842:	70 e0       	ldi	r23, 0x00	; 0
     844:	cb 01       	movw	r24, r22
     846:	8b df       	rcall	.-234    	; 0x75e <set_PWM1>
     848:	d0 93 80 00 	sts	0x0080, r29
     84c:	c0 93 81 00 	sts	0x0081, r28
     850:	60 e0       	ldi	r22, 0x00	; 0
     852:	70 e0       	ldi	r23, 0x00	; 0
     854:	cb 01       	movw	r24, r22
     856:	1a df       	rcall	.-460    	; 0x68c <set_PWM2>
     858:	df 91       	pop	r29
     85a:	cf 91       	pop	r28
     85c:	08 95       	ret

0000085e <SoundTick>:
     85e:	0f 93       	push	r16
     860:	1f 93       	push	r17
     862:	cf 93       	push	r28
     864:	df 93       	push	r29
     866:	ec 01       	movw	r28, r24
     868:	00 97       	sbiw	r24, 0x00	; 0
     86a:	21 f0       	breq	.+8      	; 0x874 <SoundTick+0x16>
     86c:	01 97       	sbiw	r24, 0x01	; 1
     86e:	09 f4       	brne	.+2      	; 0x872 <SoundTick+0x14>
     870:	c1 c0       	rjmp	.+386    	; 0x9f4 <SoundTick+0x196>
     872:	ae c1       	rjmp	.+860    	; 0xbd0 <SoundTick+0x372>
     874:	dd df       	rcall	.-70     	; 0x830 <PWM_on>
     876:	87 e1       	ldi	r24, 0x17	; 23
     878:	e5 e5       	ldi	r30, 0x55	; 85
     87a:	fd e1       	ldi	r31, 0x1D	; 29
     87c:	df 01       	movw	r26, r30
     87e:	28 2f       	mov	r18, r24
     880:	1d 92       	st	X+, r1
     882:	2a 95       	dec	r18
     884:	e9 f7       	brne	.-6      	; 0x880 <SoundTick+0x22>
     886:	25 ef       	ldi	r18, 0xF5	; 245
     888:	3c e1       	ldi	r19, 0x1C	; 28
     88a:	31 83       	std	Z+1, r19	; 0x01
     88c:	20 83       	st	Z, r18
     88e:	25 e9       	ldi	r18, 0x95	; 149
     890:	37 e1       	ldi	r19, 0x17	; 23
     892:	33 83       	std	Z+3, r19	; 0x03
     894:	22 83       	std	Z+2, r18	; 0x02
     896:	21 e0       	ldi	r18, 0x01	; 1
     898:	30 e0       	ldi	r19, 0x00	; 0
     89a:	35 83       	std	Z+5, r19	; 0x05
     89c:	24 83       	std	Z+4, r18	; 0x04
     89e:	41 ef       	ldi	r20, 0xF1	; 241
     8a0:	5c e1       	ldi	r21, 0x1C	; 28
     8a2:	57 83       	std	Z+7, r21	; 0x07
     8a4:	46 83       	std	Z+6, r20	; 0x06
     8a6:	43 e9       	ldi	r20, 0x93	; 147
     8a8:	57 e1       	ldi	r21, 0x17	; 23
     8aa:	51 87       	std	Z+9, r21	; 0x09
     8ac:	40 87       	std	Z+8, r20	; 0x08
     8ae:	33 87       	std	Z+11, r19	; 0x0b
     8b0:	22 87       	std	Z+10, r18	; 0x0a
     8b2:	94 e0       	ldi	r25, 0x04	; 4
     8b4:	94 87       	std	Z+12, r25	; 0x0c
     8b6:	ed e2       	ldi	r30, 0x2D	; 45
     8b8:	fe e1       	ldi	r31, 0x1E	; 30
     8ba:	df 01       	movw	r26, r30
     8bc:	28 2f       	mov	r18, r24
     8be:	1d 92       	st	X+, r1
     8c0:	2a 95       	dec	r18
     8c2:	e9 f7       	brne	.-6      	; 0x8be <SoundTick+0x60>
     8c4:	25 ed       	ldi	r18, 0xD5	; 213
     8c6:	3c e0       	ldi	r19, 0x0C	; 12
     8c8:	31 83       	std	Z+1, r19	; 0x01
     8ca:	20 83       	st	Z, r18
     8cc:	25 ea       	ldi	r18, 0xA5	; 165
     8ce:	3b e0       	ldi	r19, 0x0B	; 11
     8d0:	33 83       	std	Z+3, r19	; 0x03
     8d2:	22 83       	std	Z+2, r18	; 0x02
     8d4:	28 e9       	ldi	r18, 0x98	; 152
     8d6:	30 e0       	ldi	r19, 0x00	; 0
     8d8:	35 83       	std	Z+5, r19	; 0x05
     8da:	24 83       	std	Z+4, r18	; 0x04
     8dc:	25 ee       	ldi	r18, 0xE5	; 229
     8de:	38 e0       	ldi	r19, 0x08	; 8
     8e0:	37 83       	std	Z+7, r19	; 0x07
     8e2:	26 83       	std	Z+6, r18	; 0x06
     8e4:	25 e8       	ldi	r18, 0x85	; 133
     8e6:	37 e0       	ldi	r19, 0x07	; 7
     8e8:	31 87       	std	Z+9, r19	; 0x09
     8ea:	20 87       	std	Z+8, r18	; 0x08
     8ec:	20 eb       	ldi	r18, 0xB0	; 176
     8ee:	30 e0       	ldi	r19, 0x00	; 0
     8f0:	33 87       	std	Z+11, r19	; 0x0b
     8f2:	22 87       	std	Z+10, r18	; 0x0a
     8f4:	25 e0       	ldi	r18, 0x05	; 5
     8f6:	24 87       	std	Z+12, r18	; 0x0c
     8f8:	e6 e1       	ldi	r30, 0x16	; 22
     8fa:	fe e1       	ldi	r31, 0x1E	; 30
     8fc:	df 01       	movw	r26, r30
     8fe:	28 2f       	mov	r18, r24
     900:	1d 92       	st	X+, r1
     902:	2a 95       	dec	r18
     904:	e9 f7       	brne	.-6      	; 0x900 <SoundTick+0xa2>
     906:	25 e8       	ldi	r18, 0x85	; 133
     908:	35 e0       	ldi	r19, 0x05	; 5
     90a:	31 83       	std	Z+1, r19	; 0x01
     90c:	20 83       	st	Z, r18
     90e:	25 e8       	ldi	r18, 0x85	; 133
     910:	34 e0       	ldi	r19, 0x04	; 4
     912:	33 83       	std	Z+3, r19	; 0x03
     914:	22 83       	std	Z+2, r18	; 0x02
     916:	20 e8       	ldi	r18, 0x80	; 128
     918:	30 e0       	ldi	r19, 0x00	; 0
     91a:	35 83       	std	Z+5, r19	; 0x05
     91c:	24 83       	std	Z+4, r18	; 0x04
     91e:	29 e0       	ldi	r18, 0x09	; 9
     920:	33 e0       	ldi	r19, 0x03	; 3
     922:	37 83       	std	Z+7, r19	; 0x07
     924:	26 83       	std	Z+6, r18	; 0x06
     926:	2b e4       	ldi	r18, 0x4B	; 75
     928:	32 e0       	ldi	r19, 0x02	; 2
     92a:	31 87       	std	Z+9, r19	; 0x09
     92c:	20 87       	std	Z+8, r18	; 0x08
     92e:	2f e5       	ldi	r18, 0x5F	; 95
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	33 87       	std	Z+11, r19	; 0x0b
     934:	22 87       	std	Z+10, r18	; 0x0a
     936:	28 e0       	ldi	r18, 0x08	; 8
     938:	24 87       	std	Z+12, r18	; 0x0c
     93a:	eb e7       	ldi	r30, 0x7B	; 123
     93c:	fd e1       	ldi	r31, 0x1D	; 29
     93e:	df 01       	movw	r26, r30
     940:	28 2f       	mov	r18, r24
     942:	1d 92       	st	X+, r1
     944:	2a 95       	dec	r18
     946:	e9 f7       	brne	.-6      	; 0x942 <SoundTick+0xe4>
     948:	23 ef       	ldi	r18, 0xF3	; 243
     94a:	34 e1       	ldi	r19, 0x14	; 20
     94c:	31 83       	std	Z+1, r19	; 0x01
     94e:	20 83       	st	Z, r18
     950:	23 ea       	ldi	r18, 0xA3	; 163
     952:	33 e1       	ldi	r19, 0x13	; 19
     954:	33 83       	std	Z+3, r19	; 0x03
     956:	22 83       	std	Z+2, r18	; 0x02
     958:	28 ea       	ldi	r18, 0xA8	; 168
     95a:	30 e0       	ldi	r19, 0x00	; 0
     95c:	35 83       	std	Z+5, r19	; 0x05
     95e:	24 83       	std	Z+4, r18	; 0x04
     960:	2f ea       	ldi	r18, 0xAF	; 175
     962:	30 e1       	ldi	r19, 0x10	; 16
     964:	37 83       	std	Z+7, r19	; 0x07
     966:	26 83       	std	Z+6, r18	; 0x06
     968:	25 e3       	ldi	r18, 0x35	; 53
     96a:	3f e0       	ldi	r19, 0x0F	; 15
     96c:	31 87       	std	Z+9, r19	; 0x09
     96e:	20 87       	std	Z+8, r18	; 0x08
     970:	2d eb       	ldi	r18, 0xBD	; 189
     972:	30 e0       	ldi	r19, 0x00	; 0
     974:	33 87       	std	Z+11, r19	; 0x0b
     976:	22 87       	std	Z+10, r18	; 0x0a
     978:	94 87       	std	Z+12, r25	; 0x0c
     97a:	ee ef       	ldi	r30, 0xFE	; 254
     97c:	fc e1       	ldi	r31, 0x1C	; 28
     97e:	df 01       	movw	r26, r30
     980:	1d 92       	st	X+, r1
     982:	8a 95       	dec	r24
     984:	e9 f7       	brne	.-6      	; 0x980 <SoundTick+0x122>
     986:	8f ed       	ldi	r24, 0xDF	; 223
     988:	91 e0       	ldi	r25, 0x01	; 1
     98a:	91 83       	std	Z+1, r25	; 0x01
     98c:	80 83       	st	Z, r24
     98e:	89 ea       	ldi	r24, 0xA9	; 169
     990:	91 e0       	ldi	r25, 0x01	; 1
     992:	93 83       	std	Z+3, r25	; 0x03
     994:	82 83       	std	Z+2, r24	; 0x02
     996:	8b e1       	ldi	r24, 0x1B	; 27
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	95 83       	std	Z+5, r25	; 0x05
     99c:	84 83       	std	Z+4, r24	; 0x04
     99e:	2d e3       	ldi	r18, 0x3D	; 61
     9a0:	31 e0       	ldi	r19, 0x01	; 1
     9a2:	37 83       	std	Z+7, r19	; 0x07
     9a4:	26 83       	std	Z+6, r18	; 0x06
     9a6:	27 e0       	ldi	r18, 0x07	; 7
     9a8:	31 e0       	ldi	r19, 0x01	; 1
     9aa:	31 87       	std	Z+9, r19	; 0x09
     9ac:	20 87       	std	Z+8, r18	; 0x08
     9ae:	93 87       	std	Z+11, r25	; 0x0b
     9b0:	82 87       	std	Z+10, r24	; 0x0a
     9b2:	83 e0       	ldi	r24, 0x03	; 3
     9b4:	84 87       	std	Z+12, r24	; 0x0c
     9b6:	87 e1       	ldi	r24, 0x17	; 23
     9b8:	eb e7       	ldi	r30, 0x7B	; 123
     9ba:	fd e1       	ldi	r31, 0x1D	; 29
     9bc:	a1 ed       	ldi	r26, 0xD1	; 209
     9be:	bd e1       	ldi	r27, 0x1D	; 29
     9c0:	01 90       	ld	r0, Z+
     9c2:	0d 92       	st	X+, r0
     9c4:	8a 95       	dec	r24
     9c6:	e1 f7       	brne	.-8      	; 0x9c0 <SoundTick+0x162>
     9c8:	87 e1       	ldi	r24, 0x17	; 23
     9ca:	ed e2       	ldi	r30, 0x2D	; 45
     9cc:	fe e1       	ldi	r31, 0x1E	; 30
     9ce:	a8 ee       	ldi	r26, 0xE8	; 232
     9d0:	bd e1       	ldi	r27, 0x1D	; 29
     9d2:	01 90       	ld	r0, Z+
     9d4:	0d 92       	st	X+, r0
     9d6:	8a 95       	dec	r24
     9d8:	e1 f7       	brne	.-8      	; 0x9d2 <SoundTick+0x174>
     9da:	87 e1       	ldi	r24, 0x17	; 23
     9dc:	e6 e1       	ldi	r30, 0x16	; 22
     9de:	fe e1       	ldi	r31, 0x1E	; 30
     9e0:	af ef       	ldi	r26, 0xFF	; 255
     9e2:	bd e1       	ldi	r27, 0x1D	; 29
     9e4:	01 90       	ld	r0, Z+
     9e6:	0d 92       	st	X+, r0
     9e8:	8a 95       	dec	r24
     9ea:	e1 f7       	brne	.-8      	; 0x9e4 <SoundTick+0x186>
     9ec:	eb dd       	rcall	.-1066   	; 0x5c4 <nextSong>
     9ee:	c1 e0       	ldi	r28, 0x01	; 1
     9f0:	d0 e0       	ldi	r29, 0x00	; 0
     9f2:	ee c0       	rjmp	.+476    	; 0xbd0 <SoundTick+0x372>
     9f4:	80 91 41 1d 	lds	r24, 0x1D41
     9f8:	90 91 42 1d 	lds	r25, 0x1D42
     9fc:	99 23       	and	r25, r25
     9fe:	74 f4       	brge	.+28     	; 0xa1c <SoundTick+0x1be>
     a00:	8f ef       	ldi	r24, 0xFF	; 255
     a02:	88 b9       	out	0x08, r24	; 8
     a04:	60 e0       	ldi	r22, 0x00	; 0
     a06:	70 e0       	ldi	r23, 0x00	; 0
     a08:	cb 01       	movw	r24, r22
     a0a:	a9 de       	rcall	.-686    	; 0x75e <set_PWM1>
     a0c:	ee e2       	ldi	r30, 0x2E	; 46
     a0e:	fd e1       	ldi	r31, 0x1D	; 29
     a10:	83 89       	ldd	r24, Z+19	; 0x13
     a12:	94 89       	ldd	r25, Z+20	; 0x14
     a14:	01 96       	adiw	r24, 0x01	; 1
     a16:	94 8b       	std	Z+20, r25	; 0x14
     a18:	83 8b       	std	Z+19, r24	; 0x13
     a1a:	4e c0       	rjmp	.+156    	; 0xab8 <SoundTick+0x25a>
     a1c:	0e e2       	ldi	r16, 0x2E	; 46
     a1e:	1d e1       	ldi	r17, 0x1D	; 29
     a20:	f8 01       	movw	r30, r16
     a22:	85 85       	ldd	r24, Z+13	; 0x0d
     a24:	01 90       	ld	r0, Z+
     a26:	f0 81       	ld	r31, Z
     a28:	e0 2d       	mov	r30, r0
     a2a:	24 e0       	ldi	r18, 0x04	; 4
     a2c:	82 9f       	mul	r24, r18
     a2e:	e0 0d       	add	r30, r0
     a30:	f1 1d       	adc	r31, r1
     a32:	11 24       	eor	r1, r1
     a34:	60 81       	ld	r22, Z
     a36:	71 81       	ldd	r23, Z+1	; 0x01
     a38:	82 81       	ldd	r24, Z+2	; 0x02
     a3a:	93 81       	ldd	r25, Z+3	; 0x03
     a3c:	90 de       	rcall	.-736    	; 0x75e <set_PWM1>
     a3e:	d8 01       	movw	r26, r16
     a40:	53 96       	adiw	r26, 0x13	; 19
     a42:	8d 91       	ld	r24, X+
     a44:	9c 91       	ld	r25, X
     a46:	54 97       	sbiw	r26, 0x14	; 20
     a48:	01 96       	adiw	r24, 0x01	; 1
     a4a:	54 96       	adiw	r26, 0x14	; 20
     a4c:	9c 93       	st	X, r25
     a4e:	8e 93       	st	-X, r24
     a50:	53 97       	sbiw	r26, 0x13	; 19
     a52:	1d 96       	adiw	r26, 0x0d	; 13
     a54:	ec 91       	ld	r30, X
     a56:	1d 97       	sbiw	r26, 0x0d	; 13
     a58:	f0 e0       	ldi	r31, 0x00	; 0
     a5a:	ee 0f       	add	r30, r30
     a5c:	ff 1f       	adc	r31, r31
     a5e:	12 96       	adiw	r26, 0x02	; 2
     a60:	2d 91       	ld	r18, X+
     a62:	3c 91       	ld	r19, X
     a64:	13 97       	sbiw	r26, 0x03	; 3
     a66:	e2 0f       	add	r30, r18
     a68:	f3 1f       	adc	r31, r19
     a6a:	20 81       	ld	r18, Z
     a6c:	31 81       	ldd	r19, Z+1	; 0x01
     a6e:	82 17       	cp	r24, r18
     a70:	93 07       	cpc	r25, r19
     a72:	10 f1       	brcs	.+68     	; 0xab8 <SoundTick+0x25a>
     a74:	f8 01       	movw	r30, r16
     a76:	87 85       	ldd	r24, Z+15	; 0x0f
     a78:	90 89       	ldd	r25, Z+16	; 0x10
     a7a:	21 89       	ldd	r18, Z+17	; 0x11
     a7c:	32 89       	ldd	r19, Z+18	; 0x12
     a7e:	82 17       	cp	r24, r18
     a80:	93 07       	cpc	r25, r19
     a82:	40 f0       	brcs	.+16     	; 0xa94 <SoundTick+0x236>
     a84:	2f ef       	ldi	r18, 0xFF	; 255
     a86:	3f ef       	ldi	r19, 0xFF	; 255
     a88:	34 8b       	std	Z+20, r19	; 0x14
     a8a:	23 8b       	std	Z+19, r18	; 0x13
     a8c:	01 96       	adiw	r24, 0x01	; 1
     a8e:	90 8b       	std	Z+16, r25	; 0x10
     a90:	87 87       	std	Z+15, r24	; 0x0f
     a92:	09 c0       	rjmp	.+18     	; 0xaa6 <SoundTick+0x248>
     a94:	ee e2       	ldi	r30, 0x2E	; 46
     a96:	fd e1       	ldi	r31, 0x1D	; 29
     a98:	2e ef       	ldi	r18, 0xFE	; 254
     a9a:	3f ef       	ldi	r19, 0xFF	; 255
     a9c:	34 8b       	std	Z+20, r19	; 0x14
     a9e:	23 8b       	std	Z+19, r18	; 0x13
     aa0:	02 96       	adiw	r24, 0x02	; 2
     aa2:	90 8b       	std	Z+16, r25	; 0x10
     aa4:	87 87       	std	Z+15, r24	; 0x0f
     aa6:	ee e2       	ldi	r30, 0x2E	; 46
     aa8:	fd e1       	ldi	r31, 0x1D	; 29
     aaa:	85 85       	ldd	r24, Z+13	; 0x0d
     aac:	90 e0       	ldi	r25, 0x00	; 0
     aae:	01 96       	adiw	r24, 0x01	; 1
     ab0:	64 81       	ldd	r22, Z+4	; 0x04
     ab2:	75 81       	ldd	r23, Z+5	; 0x05
     ab4:	c0 d4       	rcall	.+2432   	; 0x1436 <__udivmodhi4>
     ab6:	85 87       	std	Z+13, r24	; 0x0d
     ab8:	80 91 43 1d 	lds	r24, 0x1D43
     abc:	90 91 44 1d 	lds	r25, 0x1D44
     ac0:	99 23       	and	r25, r25
     ac2:	64 f4       	brge	.+24     	; 0xadc <SoundTick+0x27e>
     ac4:	60 e0       	ldi	r22, 0x00	; 0
     ac6:	70 e0       	ldi	r23, 0x00	; 0
     ac8:	cb 01       	movw	r24, r22
     aca:	e0 dd       	rcall	.-1088   	; 0x68c <set_PWM2>
     acc:	ee e2       	ldi	r30, 0x2E	; 46
     ace:	fd e1       	ldi	r31, 0x1D	; 29
     ad0:	85 89       	ldd	r24, Z+21	; 0x15
     ad2:	96 89       	ldd	r25, Z+22	; 0x16
     ad4:	01 96       	adiw	r24, 0x01	; 1
     ad6:	96 8b       	std	Z+22, r25	; 0x16
     ad8:	85 8b       	std	Z+21, r24	; 0x15
     ada:	7a c0       	rjmp	.+244    	; 0xbd0 <SoundTick+0x372>
     adc:	0e e2       	ldi	r16, 0x2E	; 46
     ade:	1d e1       	ldi	r17, 0x1D	; 29
     ae0:	f8 01       	movw	r30, r16
     ae2:	86 85       	ldd	r24, Z+14	; 0x0e
     ae4:	06 80       	ldd	r0, Z+6	; 0x06
     ae6:	f7 81       	ldd	r31, Z+7	; 0x07
     ae8:	e0 2d       	mov	r30, r0
     aea:	24 e0       	ldi	r18, 0x04	; 4
     aec:	82 9f       	mul	r24, r18
     aee:	e0 0d       	add	r30, r0
     af0:	f1 1d       	adc	r31, r1
     af2:	11 24       	eor	r1, r1
     af4:	60 81       	ld	r22, Z
     af6:	71 81       	ldd	r23, Z+1	; 0x01
     af8:	82 81       	ldd	r24, Z+2	; 0x02
     afa:	93 81       	ldd	r25, Z+3	; 0x03
     afc:	c7 dd       	rcall	.-1138   	; 0x68c <set_PWM2>
     afe:	d8 01       	movw	r26, r16
     b00:	55 96       	adiw	r26, 0x15	; 21
     b02:	8d 91       	ld	r24, X+
     b04:	9c 91       	ld	r25, X
     b06:	56 97       	sbiw	r26, 0x16	; 22
     b08:	01 96       	adiw	r24, 0x01	; 1
     b0a:	56 96       	adiw	r26, 0x16	; 22
     b0c:	9c 93       	st	X, r25
     b0e:	8e 93       	st	-X, r24
     b10:	55 97       	sbiw	r26, 0x15	; 21
     b12:	1e 96       	adiw	r26, 0x0e	; 14
     b14:	ec 91       	ld	r30, X
     b16:	1e 97       	sbiw	r26, 0x0e	; 14
     b18:	f0 e0       	ldi	r31, 0x00	; 0
     b1a:	ee 0f       	add	r30, r30
     b1c:	ff 1f       	adc	r31, r31
     b1e:	18 96       	adiw	r26, 0x08	; 8
     b20:	2d 91       	ld	r18, X+
     b22:	3c 91       	ld	r19, X
     b24:	19 97       	sbiw	r26, 0x09	; 9
     b26:	e2 0f       	add	r30, r18
     b28:	f3 1f       	adc	r31, r19
     b2a:	20 81       	ld	r18, Z
     b2c:	31 81       	ldd	r19, Z+1	; 0x01
     b2e:	82 17       	cp	r24, r18
     b30:	93 07       	cpc	r25, r19
     b32:	08 f4       	brcc	.+2      	; 0xb36 <SoundTick+0x2d8>
     b34:	4d c0       	rjmp	.+154    	; 0xbd0 <SoundTick+0x372>
     b36:	f8 01       	movw	r30, r16
     b38:	81 89       	ldd	r24, Z+17	; 0x11
     b3a:	92 89       	ldd	r25, Z+18	; 0x12
     b3c:	27 85       	ldd	r18, Z+15	; 0x0f
     b3e:	30 89       	ldd	r19, Z+16	; 0x10
     b40:	82 17       	cp	r24, r18
     b42:	93 07       	cpc	r25, r19
     b44:	40 f0       	brcs	.+16     	; 0xb56 <SoundTick+0x2f8>
     b46:	2f ef       	ldi	r18, 0xFF	; 255
     b48:	3f ef       	ldi	r19, 0xFF	; 255
     b4a:	36 8b       	std	Z+22, r19	; 0x16
     b4c:	25 8b       	std	Z+21, r18	; 0x15
     b4e:	01 96       	adiw	r24, 0x01	; 1
     b50:	92 8b       	std	Z+18, r25	; 0x12
     b52:	81 8b       	std	Z+17, r24	; 0x11
     b54:	09 c0       	rjmp	.+18     	; 0xb68 <SoundTick+0x30a>
     b56:	ee e2       	ldi	r30, 0x2E	; 46
     b58:	fd e1       	ldi	r31, 0x1D	; 29
     b5a:	2e ef       	ldi	r18, 0xFE	; 254
     b5c:	3f ef       	ldi	r19, 0xFF	; 255
     b5e:	36 8b       	std	Z+22, r19	; 0x16
     b60:	25 8b       	std	Z+21, r18	; 0x15
     b62:	02 96       	adiw	r24, 0x02	; 2
     b64:	92 8b       	std	Z+18, r25	; 0x12
     b66:	81 8b       	std	Z+17, r24	; 0x11
     b68:	80 91 38 1d 	lds	r24, 0x1D38
     b6c:	90 91 39 1d 	lds	r25, 0x1D39
     b70:	4b 97       	sbiw	r24, 0x1b	; 27
     b72:	29 f5       	brne	.+74     	; 0xbbe <SoundTick+0x360>
     b74:	80 91 32 1d 	lds	r24, 0x1D32
     b78:	90 91 33 1d 	lds	r25, 0x1D33
     b7c:	4b 97       	sbiw	r24, 0x1b	; 27
     b7e:	f9 f4       	brne	.+62     	; 0xbbe <SoundTick+0x360>
     b80:	80 91 3c 1d 	lds	r24, 0x1D3C
     b84:	8a 31       	cpi	r24, 0x1A	; 26
     b86:	d9 f4       	brne	.+54     	; 0xbbe <SoundTick+0x360>
     b88:	ed b7       	in	r30, 0x3d	; 61
     b8a:	fe b7       	in	r31, 0x3e	; 62
     b8c:	77 97       	sbiw	r30, 0x17	; 23
     b8e:	0f b6       	in	r0, 0x3f	; 63
     b90:	f8 94       	cli
     b92:	fe bf       	out	0x3e, r31	; 62
     b94:	0f be       	out	0x3f, r0	; 63
     b96:	ed bf       	out	0x3d, r30	; 61
     b98:	ad b7       	in	r26, 0x3d	; 61
     b9a:	be b7       	in	r27, 0x3e	; 62
     b9c:	11 96       	adiw	r26, 0x01	; 1
     b9e:	87 e1       	ldi	r24, 0x17	; 23
     ba0:	e5 e5       	ldi	r30, 0x55	; 85
     ba2:	fd e1       	ldi	r31, 0x1D	; 29
     ba4:	01 90       	ld	r0, Z+
     ba6:	0d 92       	st	X+, r0
     ba8:	8a 95       	dec	r24
     baa:	e1 f7       	brne	.-8      	; 0xba4 <SoundTick+0x346>
     bac:	e1 dc       	rcall	.-1598   	; 0x570 <playSong>
     bae:	8d b7       	in	r24, 0x3d	; 61
     bb0:	9e b7       	in	r25, 0x3e	; 62
     bb2:	47 96       	adiw	r24, 0x17	; 23
     bb4:	0f b6       	in	r0, 0x3f	; 63
     bb6:	f8 94       	cli
     bb8:	9e bf       	out	0x3e, r25	; 62
     bba:	0f be       	out	0x3f, r0	; 63
     bbc:	8d bf       	out	0x3d, r24	; 61
     bbe:	ee e2       	ldi	r30, 0x2E	; 46
     bc0:	fd e1       	ldi	r31, 0x1D	; 29
     bc2:	86 85       	ldd	r24, Z+14	; 0x0e
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	01 96       	adiw	r24, 0x01	; 1
     bc8:	62 85       	ldd	r22, Z+10	; 0x0a
     bca:	73 85       	ldd	r23, Z+11	; 0x0b
     bcc:	34 d4       	rcall	.+2152   	; 0x1436 <__udivmodhi4>
     bce:	86 87       	std	Z+14, r24	; 0x0e
     bd0:	ce 01       	movw	r24, r28
     bd2:	df 91       	pop	r29
     bd4:	cf 91       	pop	r28
     bd6:	1f 91       	pop	r17
     bd8:	0f 91       	pop	r16
     bda:	08 95       	ret

00000bdc <increment>:
			break;
	}
	return state;
}

unsigned char increment(unsigned char *x, unsigned char *y) {
     bdc:	fc 01       	movw	r30, r24
	(*y)++;
     bde:	db 01       	movw	r26, r22
     be0:	9c 91       	ld	r25, X
     be2:	9f 5f       	subi	r25, 0xFF	; 255
	if((*y) % 16 == 0) {
     be4:	89 2f       	mov	r24, r25
     be6:	8f 70       	andi	r24, 0x0F	; 15
     be8:	11 f0       	breq	.+4      	; 0xbee <increment+0x12>
	}
	return state;
}

unsigned char increment(unsigned char *x, unsigned char *y) {
	(*y)++;
     bea:	9c 93       	st	X, r25
     bec:	05 c0       	rjmp	.+10     	; 0xbf8 <increment+0x1c>
	if((*y) % 16 == 0) {
		*y = (*y) % 16, (*x)++;
     bee:	db 01       	movw	r26, r22
     bf0:	1c 92       	st	X, r1
     bf2:	80 81       	ld	r24, Z
     bf4:	8f 5f       	subi	r24, 0xFF	; 255
     bf6:	80 83       	st	Z, r24
	}
	if(*x > 0 && (*x) % 8 == 0) return 0;
     bf8:	80 81       	ld	r24, Z
     bfa:	88 23       	and	r24, r24
     bfc:	31 f0       	breq	.+12     	; 0xc0a <increment+0x2e>
     bfe:	98 2f       	mov	r25, r24
     c00:	97 70       	andi	r25, 0x07	; 7
     c02:	81 e0       	ldi	r24, 0x01	; 1
     c04:	19 f4       	brne	.+6      	; 0xc0c <increment+0x30>
     c06:	80 e0       	ldi	r24, 0x00	; 0
     c08:	08 95       	ret
	return 1;
     c0a:	81 e0       	ldi	r24, 0x01	; 1
}
     c0c:	08 95       	ret

00000c0e <LevelTick>:

enum LevelStates {LevelWait, LevelSetup};
unsigned char levx, levy;
int LevelTick(int state) {
     c0e:	cf 93       	push	r28
     c10:	df 93       	push	r29
     c12:	ec 01       	movw	r28, r24
	switch(state) {
     c14:	00 97       	sbiw	r24, 0x00	; 0
     c16:	19 f0       	breq	.+6      	; 0xc1e <LevelTick+0x10>
     c18:	01 97       	sbiw	r24, 0x01	; 1
     c1a:	f9 f0       	breq	.+62     	; 0xc5a <LevelTick+0x4c>
     c1c:	92 c0       	rjmp	.+292    	; 0xd42 <LevelTick+0x134>
		case LevelWait:
			if(loadlvl != -1) {
     c1e:	80 91 f0 1c 	lds	r24, 0x1CF0
     c22:	8f 3f       	cpi	r24, 0xFF	; 255
     c24:	09 f4       	brne	.+2      	; 0xc28 <LevelTick+0x1a>
     c26:	8d c0       	rjmp	.+282    	; 0xd42 <LevelTick+0x134>
				//Disable all game tasks temporarily
				ship_loc[0] = ship_loc[1] = 0;
     c28:	ee ee       	ldi	r30, 0xEE	; 238
     c2a:	fc e1       	ldi	r31, 0x1C	; 28
     c2c:	11 82       	std	Z+1, r1	; 0x01
     c2e:	10 82       	st	Z, r1
				joyTask.running = 0;
     c30:	10 92 cf 1d 	sts	0x1DCF, r1
				moveTask.running = 0;
     c34:	10 92 79 1d 	sts	0x1D79, r1
				gameManager.running = 0;
     c38:	10 92 20 1d 	sts	0x1D20, r1
				levx = levy = 0;
     c3c:	10 92 7a 1d 	sts	0x1D7A, r1
     c40:	10 92 2d 1d 	sts	0x1D2D, r1
				QueueMakeEmpty(qmoves);
     c44:	e0 91 9e 1d 	lds	r30, 0x1D9E
     c48:	f0 91 9f 1d 	lds	r31, 0x1D9F
//Functionality - Flushes the queue
//Parameter: None
//Returns: None
void QueueMakeEmpty(Queue Q)
{
	Q->front 		= 0;
     c4c:	12 82       	std	Z+2, r1	; 0x02
	Q->back 		= 0;
     c4e:	13 82       	std	Z+3, r1	; 0x03
	Q->num_objects	= 0;
     c50:	14 82       	std	Z+4, r1	; 0x04
				state = LevelSetup;
				clearScreen();
     c52:	9e da       	rcall	.-2756   	; 0x190 <clearScreen>
				joyTask.running = 0;
				moveTask.running = 0;
				gameManager.running = 0;
				levx = levy = 0;
				QueueMakeEmpty(qmoves);
				state = LevelSetup;
     c54:	c1 e0       	ldi	r28, 0x01	; 1
     c56:	d0 e0       	ldi	r29, 0x00	; 0
     c58:	74 c0       	rjmp	.+232    	; 0xd42 <LevelTick+0x134>
				clearScreen();
			}
			break;
		case LevelSetup:
			while(Levels[loadlvl][levx][levy] == EMPTY && increment(&levx, &levy));
     c5a:	e0 91 f0 1c 	lds	r30, 0x1CF0
     c5e:	80 91 2d 1d 	lds	r24, 0x1D2D
     c62:	28 e0       	ldi	r18, 0x08	; 8
     c64:	e2 02       	muls	r30, r18
     c66:	f0 01       	movw	r30, r0
     c68:	11 24       	eor	r1, r1
     c6a:	e8 0f       	add	r30, r24
     c6c:	f1 1d       	adc	r31, r1
     c6e:	80 91 7a 1d 	lds	r24, 0x1D7A
     c72:	e2 95       	swap	r30
     c74:	f2 95       	swap	r31
     c76:	f0 7f       	andi	r31, 0xF0	; 240
     c78:	fe 27       	eor	r31, r30
     c7a:	e0 7f       	andi	r30, 0xF0	; 240
     c7c:	fe 27       	eor	r31, r30
     c7e:	e8 0f       	add	r30, r24
     c80:	f1 1d       	adc	r31, r1
     c82:	e5 56       	subi	r30, 0x65	; 101
     c84:	f8 4e       	sbci	r31, 0xE8	; 232
     c86:	80 81       	ld	r24, Z
     c88:	81 11       	cpse	r24, r1
     c8a:	07 c0       	rjmp	.+14     	; 0xc9a <LevelTick+0x8c>
     c8c:	6a e7       	ldi	r22, 0x7A	; 122
     c8e:	7d e1       	ldi	r23, 0x1D	; 29
     c90:	8d e2       	ldi	r24, 0x2D	; 45
     c92:	9d e1       	ldi	r25, 0x1D	; 29
     c94:	a3 df       	rcall	.-186    	; 0xbdc <increment>
     c96:	81 11       	cpse	r24, r1
     c98:	e0 cf       	rjmp	.-64     	; 0xc5a <LevelTick+0x4c>
			if(levx > 0 && levx%8 == 0) {
     c9a:	80 91 2d 1d 	lds	r24, 0x1D2D
     c9e:	88 23       	and	r24, r24
     ca0:	b1 f0       	breq	.+44     	; 0xcce <LevelTick+0xc0>
     ca2:	98 2f       	mov	r25, r24
     ca4:	97 70       	andi	r25, 0x07	; 7
     ca6:	99 f4       	brne	.+38     	; 0xcce <LevelTick+0xc0>
				joyTask.running = 1;
     ca8:	81 e0       	ldi	r24, 0x01	; 1
     caa:	80 93 cf 1d 	sts	0x1DCF, r24
				moveTask.running = 1;
     cae:	ee e6       	ldi	r30, 0x6E	; 110
     cb0:	fd e1       	ldi	r31, 0x1D	; 29
     cb2:	83 87       	std	Z+11, r24	; 0x0b
				moveTask.state = MoveStart;
     cb4:	10 82       	st	Z, r1
				gameManager.running = 1;
     cb6:	80 93 20 1d 	sts	0x1D20, r24
				currlvl = loadlvl;
     cba:	80 91 f0 1c 	lds	r24, 0x1CF0
     cbe:	80 93 06 01 	sts	0x0106, r24
				loadlvl = -1;
     cc2:	8f ef       	ldi	r24, 0xFF	; 255
     cc4:	80 93 f0 1c 	sts	0x1CF0, r24
				state = LevelWait;
     cc8:	c0 e0       	ldi	r28, 0x00	; 0
     cca:	d0 e0       	ldi	r29, 0x00	; 0
				break;
     ccc:	3a c0       	rjmp	.+116    	; 0xd42 <LevelTick+0x134>
			}
			drawBox(levx * 2, levy * 2, Levels[loadlvl][levx][levy]);
     cce:	60 91 7a 1d 	lds	r22, 0x1D7A
     cd2:	e0 91 f0 1c 	lds	r30, 0x1CF0
     cd6:	98 e0       	ldi	r25, 0x08	; 8
     cd8:	e9 02       	muls	r30, r25
     cda:	f0 01       	movw	r30, r0
     cdc:	11 24       	eor	r1, r1
     cde:	e8 0f       	add	r30, r24
     ce0:	f1 1d       	adc	r31, r1
     ce2:	e2 95       	swap	r30
     ce4:	f2 95       	swap	r31
     ce6:	f0 7f       	andi	r31, 0xF0	; 240
     ce8:	fe 27       	eor	r31, r30
     cea:	e0 7f       	andi	r30, 0xF0	; 240
     cec:	fe 27       	eor	r31, r30
     cee:	e6 0f       	add	r30, r22
     cf0:	f1 1d       	adc	r31, r1
     cf2:	e5 56       	subi	r30, 0x65	; 101
     cf4:	f8 4e       	sbci	r31, 0xE8	; 232
     cf6:	66 0f       	add	r22, r22
     cf8:	40 81       	ld	r20, Z
     cfa:	88 0f       	add	r24, r24
     cfc:	4c da       	rcall	.-2920   	; 0x196 <drawBox>
			if(Levels[loadlvl][levx][levy] == SHIP) {
     cfe:	90 91 2d 1d 	lds	r25, 0x1D2D
     d02:	80 91 7a 1d 	lds	r24, 0x1D7A
     d06:	e0 91 f0 1c 	lds	r30, 0x1CF0
     d0a:	28 e0       	ldi	r18, 0x08	; 8
     d0c:	e2 02       	muls	r30, r18
     d0e:	f0 01       	movw	r30, r0
     d10:	11 24       	eor	r1, r1
     d12:	e9 0f       	add	r30, r25
     d14:	f1 1d       	adc	r31, r1
     d16:	e2 95       	swap	r30
     d18:	f2 95       	swap	r31
     d1a:	f0 7f       	andi	r31, 0xF0	; 240
     d1c:	fe 27       	eor	r31, r30
     d1e:	e0 7f       	andi	r30, 0xF0	; 240
     d20:	fe 27       	eor	r31, r30
     d22:	e8 0f       	add	r30, r24
     d24:	f1 1d       	adc	r31, r1
     d26:	e5 56       	subi	r30, 0x65	; 101
     d28:	f8 4e       	sbci	r31, 0xE8	; 232
     d2a:	20 81       	ld	r18, Z
     d2c:	23 30       	cpi	r18, 0x03	; 3
     d2e:	21 f4       	brne	.+8      	; 0xd38 <LevelTick+0x12a>
				ship_loc[0] = levx;
     d30:	ee ee       	ldi	r30, 0xEE	; 238
     d32:	fc e1       	ldi	r31, 0x1C	; 28
     d34:	90 83       	st	Z, r25
				ship_loc[1] = levy;
     d36:	81 83       	std	Z+1, r24	; 0x01
			}
			increment(&levx, &levy);
     d38:	6a e7       	ldi	r22, 0x7A	; 122
     d3a:	7d e1       	ldi	r23, 0x1D	; 29
     d3c:	8d e2       	ldi	r24, 0x2D	; 45
     d3e:	9d e1       	ldi	r25, 0x1D	; 29
     d40:	4d df       	rcall	.-358    	; 0xbdc <increment>
	}
	return state;
}
     d42:	ce 01       	movw	r24, r28
     d44:	df 91       	pop	r29
     d46:	cf 91       	pop	r28
     d48:	08 95       	ret

00000d4a <dead>:
	}
	return state;
}

void dead(unsigned char x, unsigned char y) {
	gameManager.state = ManagerLoss;
     d4a:	91 e0       	ldi	r25, 0x01	; 1
     d4c:	90 93 15 1d 	sts	0x1D15, r25
	sendLoss(2 * x, 2 * y);
     d50:	66 0f       	add	r22, r22
     d52:	88 0f       	add	r24, r24
     d54:	3e ca       	rjmp	.-2948   	; 0x1d2 <sendLoss>
     d56:	08 95       	ret

00000d58 <win>:
}

void win(unsigned char x, unsigned char y) {
     d58:	cf 93       	push	r28
     d5a:	df 93       	push	r29
     d5c:	d8 2f       	mov	r29, r24
     d5e:	c6 2f       	mov	r28, r22
	gameManager.state = ManagerWin;
     d60:	82 e0       	ldi	r24, 0x02	; 2
     d62:	80 93 15 1d 	sts	0x1D15, r24
	playSong(flagWin);
     d66:	8d b7       	in	r24, 0x3d	; 61
     d68:	9e b7       	in	r25, 0x3e	; 62
     d6a:	47 97       	sbiw	r24, 0x17	; 23
     d6c:	0f b6       	in	r0, 0x3f	; 63
     d6e:	f8 94       	cli
     d70:	9e bf       	out	0x3e, r25	; 62
     d72:	0f be       	out	0x3f, r0	; 63
     d74:	8d bf       	out	0x3d, r24	; 61
     d76:	ad b7       	in	r26, 0x3d	; 61
     d78:	be b7       	in	r27, 0x3e	; 62
     d7a:	11 96       	adiw	r26, 0x01	; 1
     d7c:	97 e1       	ldi	r25, 0x17	; 23
     d7e:	ee ef       	ldi	r30, 0xFE	; 254
     d80:	fc e1       	ldi	r31, 0x1C	; 28
     d82:	01 90       	ld	r0, Z+
     d84:	0d 92       	st	X+, r0
     d86:	9a 95       	dec	r25
     d88:	e1 f7       	brne	.-8      	; 0xd82 <win+0x2a>
     d8a:	f2 db       	rcall	.-2076   	; 0x570 <playSong>
	sendWin(2 * x, 2 * y);
     d8c:	6c 2f       	mov	r22, r28
     d8e:	66 0f       	add	r22, r22
     d90:	8d 2f       	mov	r24, r29
     d92:	88 0f       	add	r24, r24
     d94:	11 da       	rcall	.-3038   	; 0x1b8 <sendWin>
     d96:	8d b7       	in	r24, 0x3d	; 61
     d98:	9e b7       	in	r25, 0x3e	; 62
     d9a:	47 96       	adiw	r24, 0x17	; 23
     d9c:	0f b6       	in	r0, 0x3f	; 63
     d9e:	f8 94       	cli
     da0:	9e bf       	out	0x3e, r25	; 62
     da2:	0f be       	out	0x3f, r0	; 63
     da4:	8d bf       	out	0x3d, r24	; 61
}
     da6:	df 91       	pop	r29
     da8:	cf 91       	pop	r28
     daa:	08 95       	ret

00000dac <MoveTick>:


signed char move[2] = {0, 0};
enum Positions pos;
int MoveTick(int state) {
     dac:	ef 92       	push	r14
     dae:	ff 92       	push	r15
     db0:	0f 93       	push	r16
     db2:	1f 93       	push	r17
     db4:	cf 93       	push	r28
     db6:	df 93       	push	r29
     db8:	ec 01       	movw	r28, r24
	switch(state) {
     dba:	81 30       	cpi	r24, 0x01	; 1
     dbc:	91 05       	cpc	r25, r1
     dbe:	a9 f0       	breq	.+42     	; 0xdea <MoveTick+0x3e>
     dc0:	82 30       	cpi	r24, 0x02	; 2
     dc2:	91 05       	cpc	r25, r1
     dc4:	09 f4       	brne	.+2      	; 0xdc8 <MoveTick+0x1c>
     dc6:	46 c0       	rjmp	.+140    	; 0xe54 <MoveTick+0xa8>
     dc8:	89 2b       	or	r24, r25
     dca:	09 f0       	breq	.+2      	; 0xdce <MoveTick+0x22>
     dcc:	e1 c0       	rjmp	.+450    	; 0xf90 <MoveTick+0x1e4>
		case MoveStart:
			move[0] = move[1] = 0;
     dce:	ec ee       	ldi	r30, 0xEC	; 236
     dd0:	fc e1       	ldi	r31, 0x1C	; 28
     dd2:	11 82       	std	Z+1, r1	; 0x01
     dd4:	10 82       	st	Z, r1
			QueueMakeEmpty(qmoves);
     dd6:	e0 91 9e 1d 	lds	r30, 0x1D9E
     dda:	f0 91 9f 1d 	lds	r31, 0x1D9F
//Functionality - Flushes the queue
//Parameter: None
//Returns: None
void QueueMakeEmpty(Queue Q)
{
	Q->front 		= 0;
     dde:	12 82       	std	Z+2, r1	; 0x02
	Q->back 		= 0;
     de0:	13 82       	std	Z+3, r1	; 0x03
	Q->num_objects	= 0;
     de2:	14 82       	std	Z+4, r1	; 0x04
			state = MoveWait;
     de4:	c1 e0       	ldi	r28, 0x01	; 1
     de6:	d0 e0       	ldi	r29, 0x00	; 0
     de8:	d3 c0       	rjmp	.+422    	; 0xf90 <MoveTick+0x1e4>
			break;
		case MoveWait:
			if(!QueueIsEmpty(qmoves)) {
     dea:	e0 91 9e 1d 	lds	r30, 0x1D9E
     dee:	f0 91 9f 1d 	lds	r31, 0x1D9F
     df2:	84 81       	ldd	r24, Z+4	; 0x04
     df4:	88 23       	and	r24, r24
     df6:	09 f4       	brne	.+2      	; 0xdfa <MoveTick+0x4e>
     df8:	cb c0       	rjmp	.+406    	; 0xf90 <MoveTick+0x1e4>
				state = MoveStep;
				pos = QueueDequeue(qmoves);
     dfa:	cf 01       	movw	r24, r30
     dfc:	a4 db       	rcall	.-2232   	; 0x546 <QueueDequeue>
     dfe:	80 93 45 1d 	sts	0x1D45, r24
				//Setup our move vector
				if(pos == Left) {move[0] = 1; move[1] = 0;}
     e02:	82 30       	cpi	r24, 0x02	; 2
     e04:	41 f4       	brne	.+16     	; 0xe16 <MoveTick+0x6a>
     e06:	ec ee       	ldi	r30, 0xEC	; 236
     e08:	fc e1       	ldi	r31, 0x1C	; 28
     e0a:	81 e0       	ldi	r24, 0x01	; 1
     e0c:	80 83       	st	Z, r24
     e0e:	11 82       	std	Z+1, r1	; 0x01
			QueueMakeEmpty(qmoves);
			state = MoveWait;
			break;
		case MoveWait:
			if(!QueueIsEmpty(qmoves)) {
				state = MoveStep;
     e10:	c2 e0       	ldi	r28, 0x02	; 2
     e12:	d0 e0       	ldi	r29, 0x00	; 0
     e14:	bd c0       	rjmp	.+378    	; 0xf90 <MoveTick+0x1e4>
				pos = QueueDequeue(qmoves);
				//Setup our move vector
				if(pos == Left) {move[0] = 1; move[1] = 0;}
				else if(pos == Right) {move[0] = -1; move[1] = 0;}
     e16:	81 30       	cpi	r24, 0x01	; 1
     e18:	41 f4       	brne	.+16     	; 0xe2a <MoveTick+0x7e>
     e1a:	ec ee       	ldi	r30, 0xEC	; 236
     e1c:	fc e1       	ldi	r31, 0x1C	; 28
     e1e:	8f ef       	ldi	r24, 0xFF	; 255
     e20:	80 83       	st	Z, r24
     e22:	11 82       	std	Z+1, r1	; 0x01
			QueueMakeEmpty(qmoves);
			state = MoveWait;
			break;
		case MoveWait:
			if(!QueueIsEmpty(qmoves)) {
				state = MoveStep;
     e24:	c2 e0       	ldi	r28, 0x02	; 2
     e26:	d0 e0       	ldi	r29, 0x00	; 0
     e28:	b3 c0       	rjmp	.+358    	; 0xf90 <MoveTick+0x1e4>
				pos = QueueDequeue(qmoves);
				//Setup our move vector
				if(pos == Left) {move[0] = 1; move[1] = 0;}
				else if(pos == Right) {move[0] = -1; move[1] = 0;}
				else if(pos == Down) {move[0] = 0; move[1] = 1;}
     e2a:	84 30       	cpi	r24, 0x04	; 4
     e2c:	41 f4       	brne	.+16     	; 0xe3e <MoveTick+0x92>
     e2e:	ec ee       	ldi	r30, 0xEC	; 236
     e30:	fc e1       	ldi	r31, 0x1C	; 28
     e32:	10 82       	st	Z, r1
     e34:	81 e0       	ldi	r24, 0x01	; 1
     e36:	81 83       	std	Z+1, r24	; 0x01
			QueueMakeEmpty(qmoves);
			state = MoveWait;
			break;
		case MoveWait:
			if(!QueueIsEmpty(qmoves)) {
				state = MoveStep;
     e38:	c2 e0       	ldi	r28, 0x02	; 2
     e3a:	d0 e0       	ldi	r29, 0x00	; 0
     e3c:	a9 c0       	rjmp	.+338    	; 0xf90 <MoveTick+0x1e4>
				pos = QueueDequeue(qmoves);
				//Setup our move vector
				if(pos == Left) {move[0] = 1; move[1] = 0;}
				else if(pos == Right) {move[0] = -1; move[1] = 0;}
				else if(pos == Down) {move[0] = 0; move[1] = 1;}
				else if(pos == Up) {move[0] = 0; move[1] = -1;}
     e3e:	83 30       	cpi	r24, 0x03	; 3
     e40:	09 f0       	breq	.+2      	; 0xe44 <MoveTick+0x98>
     e42:	8d c0       	rjmp	.+282    	; 0xf5e <MoveTick+0x1b2>
     e44:	ec ee       	ldi	r30, 0xEC	; 236
     e46:	fc e1       	ldi	r31, 0x1C	; 28
     e48:	10 82       	st	Z, r1
     e4a:	8f ef       	ldi	r24, 0xFF	; 255
     e4c:	81 83       	std	Z+1, r24	; 0x01
			QueueMakeEmpty(qmoves);
			state = MoveWait;
			break;
		case MoveWait:
			if(!QueueIsEmpty(qmoves)) {
				state = MoveStep;
     e4e:	c2 e0       	ldi	r28, 0x02	; 2
     e50:	d0 e0       	ldi	r29, 0x00	; 0
     e52:	9e c0       	rjmp	.+316    	; 0xf90 <MoveTick+0x1e4>
				else if(pos == Down) {move[0] = 0; move[1] = 1;}
				else if(pos == Up) {move[0] = 0; move[1] = -1;}
			}
			break;
		case MoveStep:
			;signed char new_pos[2] = {ship_loc[0] + move[0], ship_loc[1] + move[1]};
     e54:	ae ee       	ldi	r26, 0xEE	; 238
     e56:	bc e1       	ldi	r27, 0x1C	; 28
     e58:	8c 91       	ld	r24, X
     e5a:	ec ee       	ldi	r30, 0xEC	; 236
     e5c:	fc e1       	ldi	r31, 0x1C	; 28
     e5e:	90 81       	ld	r25, Z
     e60:	19 2f       	mov	r17, r25
     e62:	18 0f       	add	r17, r24
     e64:	11 96       	adiw	r26, 0x01	; 1
     e66:	6c 91       	ld	r22, X
     e68:	21 81       	ldd	r18, Z+1	; 0x01
     e6a:	02 2f       	mov	r16, r18
     e6c:	06 0f       	add	r16, r22
			enum Piece next = Levels[currlvl][new_pos[0]][new_pos[1]];
     e6e:	e0 91 06 01 	lds	r30, 0x0106
     e72:	38 e0       	ldi	r19, 0x08	; 8
     e74:	e3 02       	muls	r30, r19
     e76:	f0 01       	movw	r30, r0
     e78:	11 24       	eor	r1, r1
     e7a:	e1 0f       	add	r30, r17
     e7c:	f1 1d       	adc	r31, r1
     e7e:	17 fd       	sbrc	r17, 7
     e80:	fa 95       	dec	r31
     e82:	e2 95       	swap	r30
     e84:	f2 95       	swap	r31
     e86:	f0 7f       	andi	r31, 0xF0	; 240
     e88:	fe 27       	eor	r31, r30
     e8a:	e0 7f       	andi	r30, 0xF0	; 240
     e8c:	fe 27       	eor	r31, r30
     e8e:	e0 0f       	add	r30, r16
     e90:	f1 1d       	adc	r31, r1
     e92:	07 fd       	sbrc	r16, 7
     e94:	fa 95       	dec	r31
     e96:	e5 56       	subi	r30, 0x65	; 101
     e98:	f8 4e       	sbci	r31, 0xE8	; 232
     e9a:	30 81       	ld	r19, Z
			if(next == ASTEROID || next == USPIKE || next == RSPIKE || next == DSPIKE || next == LSPIKE) { //They hit an asteroid and stopped
     e9c:	32 30       	cpi	r19, 0x02	; 2
     e9e:	39 f0       	breq	.+14     	; 0xeae <MoveTick+0x102>
     ea0:	4c ef       	ldi	r20, 0xFC	; 252
     ea2:	43 0f       	add	r20, r19
     ea4:	43 30       	cpi	r20, 0x03	; 3
     ea6:	38 f0       	brcs	.+14     	; 0xeb6 <MoveTick+0x10a>
     ea8:	37 30       	cpi	r19, 0x07	; 7
     eaa:	c9 f4       	brne	.+50     	; 0xede <MoveTick+0x132>
     eac:	64 c0       	rjmp	.+200    	; 0xf76 <MoveTick+0x1ca>
				state = MoveWait;
				if((move[1] == 1 && next == LSPIKE) || 
     eae:	21 30       	cpi	r18, 0x01	; 1
     eb0:	09 f0       	breq	.+2      	; 0xeb4 <MoveTick+0x108>
     eb2:	6a c0       	rjmp	.+212    	; 0xf88 <MoveTick+0x1dc>
     eb4:	57 c0       	rjmp	.+174    	; 0xf64 <MoveTick+0x1b8>
     eb6:	91 30       	cpi	r25, 0x01	; 1
     eb8:	21 f4       	brne	.+8      	; 0xec2 <MoveTick+0x116>
					(move[0] == 1 && next == USPIKE) ||
     eba:	34 30       	cpi	r19, 0x04	; 4
     ebc:	09 f0       	breq	.+2      	; 0xec0 <MoveTick+0x114>
     ebe:	5e c0       	rjmp	.+188    	; 0xf7c <MoveTick+0x1d0>
     ec0:	0a c0       	rjmp	.+20     	; 0xed6 <MoveTick+0x12a>
     ec2:	2f 3f       	cpi	r18, 0xFF	; 255
     ec4:	11 f4       	brne	.+4      	; 0xeca <MoveTick+0x11e>
					(move[1] == -1 && next == RSPIKE) || 
     ec6:	35 30       	cpi	r19, 0x05	; 5
     ec8:	31 f0       	breq	.+12     	; 0xed6 <MoveTick+0x12a>
     eca:	9f 3f       	cpi	r25, 0xFF	; 255
     ecc:	09 f0       	breq	.+2      	; 0xed0 <MoveTick+0x124>
     ece:	4d c0       	rjmp	.+154    	; 0xf6a <MoveTick+0x1be>
					(move[0] == -1 && next == DSPIKE)) {
     ed0:	36 30       	cpi	r19, 0x06	; 6
     ed2:	09 f0       	breq	.+2      	; 0xed6 <MoveTick+0x12a>
     ed4:	4d c0       	rjmp	.+154    	; 0xf70 <MoveTick+0x1c4>
						
						dead(ship_loc[0], ship_loc[1]);
     ed6:	39 df       	rcall	.-398    	; 0xd4a <dead>
			break;
		case MoveStep:
			;signed char new_pos[2] = {ship_loc[0] + move[0], ship_loc[1] + move[1]};
			enum Piece next = Levels[currlvl][new_pos[0]][new_pos[1]];
			if(next == ASTEROID || next == USPIKE || next == RSPIKE || next == DSPIKE || next == LSPIKE) { //They hit an asteroid and stopped
				state = MoveWait;
     ed8:	c1 e0       	ldi	r28, 0x01	; 1
     eda:	d0 e0       	ldi	r29, 0x00	; 0
     edc:	59 c0       	rjmp	.+178    	; 0xf90 <MoveTick+0x1e4>
						
						dead(ship_loc[0], ship_loc[1]);
				}
				break;
			}
			drawBox(ship_loc[0] * 2, ship_loc[1] * 2, EMPTY);
     ede:	66 0f       	add	r22, r22
     ee0:	40 e0       	ldi	r20, 0x00	; 0
     ee2:	88 0f       	add	r24, r24
     ee4:	58 d9       	rcall	.-3408   	; 0x196 <drawBox>
			ship_loc[0] = new_pos[0];
     ee6:	0f 2e       	mov	r0, r31
     ee8:	fe ee       	ldi	r31, 0xEE	; 238
     eea:	ef 2e       	mov	r14, r31
     eec:	fc e1       	ldi	r31, 0x1C	; 28
     eee:	ff 2e       	mov	r15, r31
     ef0:	f0 2d       	mov	r31, r0
     ef2:	f7 01       	movw	r30, r14
     ef4:	10 83       	st	Z, r17
			ship_loc[1] = new_pos[1];
     ef6:	01 83       	std	Z+1, r16	; 0x01
			drawBox(ship_loc[0] * 2, ship_loc[1] * 2, SHIP);
     ef8:	60 2f       	mov	r22, r16
     efa:	66 0f       	add	r22, r22
     efc:	43 e0       	ldi	r20, 0x03	; 3
     efe:	81 2f       	mov	r24, r17
     f00:	88 0f       	add	r24, r24
     f02:	49 d9       	rcall	.-3438   	; 0x196 <drawBox>
			if(ship_loc[0] < 0 || ship_loc[0] >= 8 || ship_loc[1] < 0 || ship_loc[1] >= 16) {
     f04:	f7 01       	movw	r30, r14
     f06:	80 81       	ld	r24, Z
     f08:	88 30       	cpi	r24, 0x08	; 8
     f0a:	20 f4       	brcc	.+8      	; 0xf14 <MoveTick+0x168>
     f0c:	60 91 ef 1c 	lds	r22, 0x1CEF
     f10:	60 31       	cpi	r22, 0x10	; 16
     f12:	60 f0       	brcs	.+24     	; 0xf2c <MoveTick+0x180>
				dead(ship_loc[0] - move[0], ship_loc[1] - move[1]);
     f14:	ec ee       	ldi	r30, 0xEC	; 236
     f16:	fc e1       	ldi	r31, 0x1C	; 28
     f18:	60 91 ef 1c 	lds	r22, 0x1CEF
     f1c:	91 81       	ldd	r25, Z+1	; 0x01
     f1e:	69 1b       	sub	r22, r25
     f20:	90 81       	ld	r25, Z
     f22:	89 1b       	sub	r24, r25
     f24:	12 df       	rcall	.-476    	; 0xd4a <dead>
				state = MoveWait;
     f26:	c1 e0       	ldi	r28, 0x01	; 1
     f28:	d0 e0       	ldi	r29, 0x00	; 0
     f2a:	32 c0       	rjmp	.+100    	; 0xf90 <MoveTick+0x1e4>
			} else if(Levels[currlvl][ship_loc[0]][ship_loc[1]] == FINISH) { //They won!
     f2c:	e0 91 06 01 	lds	r30, 0x0106
     f30:	38 e0       	ldi	r19, 0x08	; 8
     f32:	e3 02       	muls	r30, r19
     f34:	f0 01       	movw	r30, r0
     f36:	11 24       	eor	r1, r1
     f38:	e8 0f       	add	r30, r24
     f3a:	f1 1d       	adc	r31, r1
     f3c:	e2 95       	swap	r30
     f3e:	f2 95       	swap	r31
     f40:	f0 7f       	andi	r31, 0xF0	; 240
     f42:	fe 27       	eor	r31, r30
     f44:	e0 7f       	andi	r30, 0xF0	; 240
     f46:	fe 27       	eor	r31, r30
     f48:	e6 0f       	add	r30, r22
     f4a:	f1 1d       	adc	r31, r1
     f4c:	e5 56       	subi	r30, 0x65	; 101
     f4e:	f8 4e       	sbci	r31, 0xE8	; 232
     f50:	90 81       	ld	r25, Z
     f52:	91 30       	cpi	r25, 0x01	; 1
     f54:	e9 f4       	brne	.+58     	; 0xf90 <MoveTick+0x1e4>
				win(ship_loc[0], ship_loc[1]);
     f56:	00 df       	rcall	.-512    	; 0xd58 <win>
				state = MoveWait;
     f58:	c1 e0       	ldi	r28, 0x01	; 1
     f5a:	d0 e0       	ldi	r29, 0x00	; 0
     f5c:	19 c0       	rjmp	.+50     	; 0xf90 <MoveTick+0x1e4>
			QueueMakeEmpty(qmoves);
			state = MoveWait;
			break;
		case MoveWait:
			if(!QueueIsEmpty(qmoves)) {
				state = MoveStep;
     f5e:	c2 e0       	ldi	r28, 0x02	; 2
     f60:	d0 e0       	ldi	r29, 0x00	; 0
     f62:	16 c0       	rjmp	.+44     	; 0xf90 <MoveTick+0x1e4>
			break;
		case MoveStep:
			;signed char new_pos[2] = {ship_loc[0] + move[0], ship_loc[1] + move[1]};
			enum Piece next = Levels[currlvl][new_pos[0]][new_pos[1]];
			if(next == ASTEROID || next == USPIKE || next == RSPIKE || next == DSPIKE || next == LSPIKE) { //They hit an asteroid and stopped
				state = MoveWait;
     f64:	c1 e0       	ldi	r28, 0x01	; 1
     f66:	d0 e0       	ldi	r29, 0x00	; 0
     f68:	13 c0       	rjmp	.+38     	; 0xf90 <MoveTick+0x1e4>
     f6a:	c1 e0       	ldi	r28, 0x01	; 1
     f6c:	d0 e0       	ldi	r29, 0x00	; 0
     f6e:	10 c0       	rjmp	.+32     	; 0xf90 <MoveTick+0x1e4>
     f70:	c1 e0       	ldi	r28, 0x01	; 1
     f72:	d0 e0       	ldi	r29, 0x00	; 0
     f74:	0d c0       	rjmp	.+26     	; 0xf90 <MoveTick+0x1e4>
				if((move[1] == 1 && next == LSPIKE) || 
     f76:	21 30       	cpi	r18, 0x01	; 1
     f78:	39 f4       	brne	.+14     	; 0xf88 <MoveTick+0x1dc>
     f7a:	ad cf       	rjmp	.-166    	; 0xed6 <MoveTick+0x12a>
					(move[0] == 1 && next == USPIKE) ||
     f7c:	2f 3f       	cpi	r18, 0xFF	; 255
     f7e:	09 f4       	brne	.+2      	; 0xf82 <MoveTick+0x1d6>
     f80:	a2 cf       	rjmp	.-188    	; 0xec6 <MoveTick+0x11a>
			break;
		case MoveStep:
			;signed char new_pos[2] = {ship_loc[0] + move[0], ship_loc[1] + move[1]};
			enum Piece next = Levels[currlvl][new_pos[0]][new_pos[1]];
			if(next == ASTEROID || next == USPIKE || next == RSPIKE || next == DSPIKE || next == LSPIKE) { //They hit an asteroid and stopped
				state = MoveWait;
     f82:	c1 e0       	ldi	r28, 0x01	; 1
     f84:	d0 e0       	ldi	r29, 0x00	; 0
     f86:	04 c0       	rjmp	.+8      	; 0xf90 <MoveTick+0x1e4>
				if((move[1] == 1 && next == LSPIKE) || 
     f88:	91 30       	cpi	r25, 0x01	; 1
     f8a:	09 f0       	breq	.+2      	; 0xf8e <MoveTick+0x1e2>
     f8c:	9a cf       	rjmp	.-204    	; 0xec2 <MoveTick+0x116>
     f8e:	f6 cf       	rjmp	.-20     	; 0xf7c <MoveTick+0x1d0>
				state = MoveWait;
			}
			break;
	}
	return state;
};
     f90:	ce 01       	movw	r24, r28
     f92:	df 91       	pop	r29
     f94:	cf 91       	pop	r28
     f96:	1f 91       	pop	r17
     f98:	0f 91       	pop	r16
     f9a:	ff 90       	pop	r15
     f9c:	ef 90       	pop	r14
     f9e:	08 95       	ret

00000fa0 <main>:


int main(void)
{
     fa0:	cf 93       	push	r28
     fa2:	df 93       	push	r29
     fa4:	cd b7       	in	r28, 0x3d	; 61
     fa6:	de b7       	in	r29, 0x3e	; 62
     fa8:	2a 97       	sbiw	r28, 0x0a	; 10
     faa:	0f b6       	in	r0, 0x3f	; 63
     fac:	f8 94       	cli
     fae:	de bf       	out	0x3e, r29	; 62
     fb0:	0f be       	out	0x3f, r0	; 63
     fb2:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0x00; PINA = 0xFF; PORTA = 0xFF;
     fb4:	11 b8       	out	0x01, r1	; 1
     fb6:	8f ef       	ldi	r24, 0xFF	; 255
     fb8:	80 b9       	out	0x00, r24	; 0
     fba:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PINB = 0x00; PORTB = 0x00;
     fbc:	84 b9       	out	0x04, r24	; 4
     fbe:	13 b8       	out	0x03, r1	; 3
     fc0:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PINC = 0x00; PORTC = 0x00;
     fc2:	87 b9       	out	0x07, r24	; 7
     fc4:	16 b8       	out	0x06, r1	; 6
     fc6:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PIND = 0x00; PORTD = 0x00;
     fc8:	8a b9       	out	0x0a, r24	; 10
     fca:	19 b8       	out	0x09, r1	; 9
     fcc:	1b b8       	out	0x0b, r1	; 11
	
	#define num_tasks 5
	
	songTask = (task){Start, 5, 5, &SoundTick, 1};
     fce:	8c e0       	ldi	r24, 0x0C	; 12
     fd0:	eb e9       	ldi	r30, 0x9B	; 155
     fd2:	fc e1       	ldi	r31, 0x1C	; 28
     fd4:	ac ea       	ldi	r26, 0xAC	; 172
     fd6:	bd e1       	ldi	r27, 0x1D	; 29
     fd8:	01 90       	ld	r0, Z+
     fda:	0d 92       	st	X+, r0
     fdc:	8a 95       	dec	r24
     fde:	e1 f7       	brne	.-8      	; 0xfd8 <main+0x38>
	levelSetup = (task){LevelWait, 50, 50, &LevelTick, 1};
     fe0:	8c e0       	ldi	r24, 0x0C	; 12
     fe2:	e7 ea       	ldi	r30, 0xA7	; 167
     fe4:	fc e1       	ldi	r31, 0x1C	; 28
     fe6:	a9 e4       	ldi	r26, 0x49	; 73
     fe8:	bd e1       	ldi	r27, 0x1D	; 29
     fea:	01 90       	ld	r0, Z+
     fec:	0d 92       	st	X+, r0
     fee:	8a 95       	dec	r24
     ff0:	e1 f7       	brne	.-8      	; 0xfea <main+0x4a>
	joyTask = (task){JoyWait, 25, 25, &JoyTick, 0};
     ff2:	8c e0       	ldi	r24, 0x0C	; 12
     ff4:	e3 eb       	ldi	r30, 0xB3	; 179
     ff6:	fc e1       	ldi	r31, 0x1C	; 28
     ff8:	a4 ec       	ldi	r26, 0xC4	; 196
     ffa:	bd e1       	ldi	r27, 0x1D	; 29
     ffc:	01 90       	ld	r0, Z+
     ffe:	0d 92       	st	X+, r0
    1000:	8a 95       	dec	r24
    1002:	e1 f7       	brne	.-8      	; 0xffc <main+0x5c>
	moveTask = (task){MoveWait, 100, 100, &MoveTick, 0};
    1004:	8c e0       	ldi	r24, 0x0C	; 12
    1006:	ef eb       	ldi	r30, 0xBF	; 191
    1008:	fc e1       	ldi	r31, 0x1C	; 28
    100a:	ae e6       	ldi	r26, 0x6E	; 110
    100c:	bd e1       	ldi	r27, 0x1D	; 29
    100e:	01 90       	ld	r0, Z+
    1010:	0d 92       	st	X+, r0
    1012:	8a 95       	dec	r24
    1014:	e1 f7       	brne	.-8      	; 0x100e <main+0x6e>
	gameManager = (task){ManagerPlaying, 25, 25, &ManagerTick, 0};
    1016:	8c e0       	ldi	r24, 0x0C	; 12
    1018:	eb ec       	ldi	r30, 0xCB	; 203
    101a:	fc e1       	ldi	r31, 0x1C	; 28
    101c:	a5 e1       	ldi	r26, 0x15	; 21
    101e:	bd e1       	ldi	r27, 0x1D	; 29
    1020:	01 90       	ld	r0, Z+
    1022:	0d 92       	st	X+, r0
    1024:	8a 95       	dec	r24
    1026:	e1 f7       	brne	.-8      	; 0x1020 <main+0x80>
	
	playSong(undertale);
    1028:	8d b7       	in	r24, 0x3d	; 61
    102a:	9e b7       	in	r25, 0x3e	; 62
    102c:	47 97       	sbiw	r24, 0x17	; 23
    102e:	0f b6       	in	r0, 0x3f	; 63
    1030:	f8 94       	cli
    1032:	9e bf       	out	0x3e, r25	; 62
    1034:	0f be       	out	0x3f, r0	; 63
    1036:	8d bf       	out	0x3d, r24	; 61
    1038:	ad b7       	in	r26, 0x3d	; 61
    103a:	be b7       	in	r27, 0x3e	; 62
    103c:	11 96       	adiw	r26, 0x01	; 1
    103e:	87 e1       	ldi	r24, 0x17	; 23
    1040:	ed e2       	ldi	r30, 0x2D	; 45
    1042:	fe e1       	ldi	r31, 0x1E	; 30
    1044:	01 90       	ld	r0, Z+
    1046:	0d 92       	st	X+, r0
    1048:	8a 95       	dec	r24
    104a:	e1 f7       	brne	.-8      	; 0x1044 <main+0xa4>
    104c:	91 da       	rcall	.-2782   	; 0x570 <playSong>
	
	task *tasks[num_tasks] = {&songTask, &joyTask, &moveTask, &levelSetup, &gameManager};
    104e:	8a e0       	ldi	r24, 0x0A	; 10
    1050:	e7 ed       	ldi	r30, 0xD7	; 215
    1052:	fc e1       	ldi	r31, 0x1C	; 28
    1054:	de 01       	movw	r26, r28
    1056:	11 96       	adiw	r26, 0x01	; 1
    1058:	01 90       	ld	r0, Z+
    105a:	0d 92       	st	X+, r0
    105c:	8a 95       	dec	r24
    105e:	e1 f7       	brne	.-8      	; 0x1058 <main+0xb8>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}

void TimerSet(unsigned long M) {
	_avr_timer_M = M;
    1060:	81 e0       	ldi	r24, 0x01	; 1
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	a0 e0       	ldi	r26, 0x00	; 0
    1066:	b0 e0       	ldi	r27, 0x00	; 0
    1068:	80 93 97 17 	sts	0x1797, r24
    106c:	90 93 98 17 	sts	0x1798, r25
    1070:	a0 93 99 17 	sts	0x1799, r26
    1074:	b0 93 9a 17 	sts	0x179A, r27
	_avr_timer_cntcurr = _avr_timer_M;
    1078:	80 93 f9 1c 	sts	0x1CF9, r24
    107c:	90 93 fa 1c 	sts	0x1CFA, r25
    1080:	a0 93 fb 1c 	sts	0x1CFB, r26
    1084:	b0 93 fc 1c 	sts	0x1CFC, r27
	unsigned short period = 1;
	
	TimerSet(period);
	TimerOn();
    1088:	b9 d9       	rcall	.-3214   	; 0x3fc <TimerOn>
	joystickInit();
    108a:	b0 d8       	rcall	.-3744   	; 0x1ec <joystickInit>
	initUSART(0);
    108c:	80 e0       	ldi	r24, 0x00	; 0
    108e:	1d d8       	rcall	.-4038   	; 0xca <initUSART>
	USART_Flush(0);
    1090:	80 e0       	ldi	r24, 0x00	; 0
    1092:	3d d8       	rcall	.-3974   	; 0x10e <USART_Flush>
	
	qmoves = QueueInit(10);
    1094:	8a e0       	ldi	r24, 0x0A	; 10
    1096:	0c da       	rcall	.-3048   	; 0x4b0 <QueueInit>
    1098:	90 93 9f 1d 	sts	0x1D9F, r25
    109c:	80 93 9e 1d 	sts	0x1D9E, r24
    10a0:	0f b6       	in	r0, 0x3f	; 63
    10a2:	f8 94       	cli
    10a4:	de bf       	out	0x3e, r29	; 62
    10a6:	0f be       	out	0x3f, r0	; 63
    10a8:	cd bf       	out	0x3d, r28	; 61
    10aa:	6e 01       	movw	r12, r28
    10ac:	bb e0       	ldi	r27, 0x0B	; 11
    10ae:	cb 0e       	add	r12, r27
    10b0:	d1 1c       	adc	r13, r1
	
    while (1) {
		joystickSample(); //updates joyPos
    10b2:	aa d8       	rcall	.-3756   	; 0x208 <joystickSample>
    10b4:	fe 01       	movw	r30, r28
    10b6:	31 96       	adiw	r30, 0x01	; 1
    10b8:	7f 01       	movw	r14, r30
		for(int i=0; i<num_tasks; i++) {
			if(!tasks[i]->running) continue;
    10ba:	d7 01       	movw	r26, r14
    10bc:	0d 91       	ld	r16, X+
    10be:	1d 91       	ld	r17, X+
    10c0:	7d 01       	movw	r14, r26
    10c2:	f8 01       	movw	r30, r16
    10c4:	83 85       	ldd	r24, Z+11	; 0x0b
    10c6:	88 23       	and	r24, r24
    10c8:	39 f1       	breq	.+78     	; 0x1118 <main+0x178>
			if(tasks[i]->elapsedTime >= tasks[i]->period) {
    10ca:	45 81       	ldd	r20, Z+5	; 0x05
    10cc:	56 81       	ldd	r21, Z+6	; 0x06
    10ce:	67 81       	ldd	r22, Z+7	; 0x07
    10d0:	70 85       	ldd	r23, Z+8	; 0x08
    10d2:	81 81       	ldd	r24, Z+1	; 0x01
    10d4:	92 81       	ldd	r25, Z+2	; 0x02
    10d6:	a3 81       	ldd	r26, Z+3	; 0x03
    10d8:	b4 81       	ldd	r27, Z+4	; 0x04
    10da:	48 17       	cp	r20, r24
    10dc:	59 07       	cpc	r21, r25
    10de:	6a 07       	cpc	r22, r26
    10e0:	7b 07       	cpc	r23, r27
    10e2:	70 f0       	brcs	.+28     	; 0x1100 <main+0x160>
				tasks[i]->elapsedTime = 0;
    10e4:	15 82       	std	Z+5, r1	; 0x05
    10e6:	16 82       	std	Z+6, r1	; 0x06
    10e8:	17 82       	std	Z+7, r1	; 0x07
    10ea:	10 86       	std	Z+8, r1	; 0x08
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
    10ec:	80 81       	ld	r24, Z
    10ee:	01 84       	ldd	r0, Z+9	; 0x09
    10f0:	f2 85       	ldd	r31, Z+10	; 0x0a
    10f2:	e0 2d       	mov	r30, r0
    10f4:	08 2e       	mov	r0, r24
    10f6:	00 0c       	add	r0, r0
    10f8:	99 0b       	sbc	r25, r25
    10fa:	09 95       	icall
    10fc:	f8 01       	movw	r30, r16
    10fe:	80 83       	st	Z, r24
			}
			tasks[i]->elapsedTime += period;
    1100:	f8 01       	movw	r30, r16
    1102:	85 81       	ldd	r24, Z+5	; 0x05
    1104:	96 81       	ldd	r25, Z+6	; 0x06
    1106:	a7 81       	ldd	r26, Z+7	; 0x07
    1108:	b0 85       	ldd	r27, Z+8	; 0x08
    110a:	01 96       	adiw	r24, 0x01	; 1
    110c:	a1 1d       	adc	r26, r1
    110e:	b1 1d       	adc	r27, r1
    1110:	85 83       	std	Z+5, r24	; 0x05
    1112:	96 83       	std	Z+6, r25	; 0x06
    1114:	a7 83       	std	Z+7, r26	; 0x07
    1116:	b0 87       	std	Z+8, r27	; 0x08
	
	qmoves = QueueInit(10);
	
    while (1) {
		joystickSample(); //updates joyPos
		for(int i=0; i<num_tasks; i++) {
    1118:	ec 14       	cp	r14, r12
    111a:	fd 04       	cpc	r15, r13
    111c:	71 f6       	brne	.-100    	; 0x10ba <main+0x11a>
				tasks[i]->elapsedTime = 0;
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
			}
			tasks[i]->elapsedTime += period;
		}
		while(!TimerFlag);
    111e:	80 91 fd 1c 	lds	r24, 0x1CFD
    1122:	88 23       	and	r24, r24
    1124:	e1 f3       	breq	.-8      	; 0x111e <main+0x17e>
		TimerFlag = 0;
    1126:	10 92 fd 1c 	sts	0x1CFD, r1
    }
    112a:	c3 cf       	rjmp	.-122    	; 0x10b2 <main+0x112>

0000112c <__cmpsf2>:
    112c:	9c d0       	rcall	.+312    	; 0x1266 <__fp_cmp>
    112e:	08 f4       	brcc	.+2      	; 0x1132 <__cmpsf2+0x6>
    1130:	81 e0       	ldi	r24, 0x01	; 1
    1132:	08 95       	ret

00001134 <__divsf3>:
    1134:	0c d0       	rcall	.+24     	; 0x114e <__divsf3x>
    1136:	d2 c0       	rjmp	.+420    	; 0x12dc <__fp_round>
    1138:	ca d0       	rcall	.+404    	; 0x12ce <__fp_pscB>
    113a:	40 f0       	brcs	.+16     	; 0x114c <__divsf3+0x18>
    113c:	c1 d0       	rcall	.+386    	; 0x12c0 <__fp_pscA>
    113e:	30 f0       	brcs	.+12     	; 0x114c <__divsf3+0x18>
    1140:	21 f4       	brne	.+8      	; 0x114a <__divsf3+0x16>
    1142:	5f 3f       	cpi	r21, 0xFF	; 255
    1144:	19 f0       	breq	.+6      	; 0x114c <__divsf3+0x18>
    1146:	b3 c0       	rjmp	.+358    	; 0x12ae <__fp_inf>
    1148:	51 11       	cpse	r21, r1
    114a:	fc c0       	rjmp	.+504    	; 0x1344 <__fp_szero>
    114c:	b6 c0       	rjmp	.+364    	; 0x12ba <__fp_nan>

0000114e <__divsf3x>:
    114e:	d7 d0       	rcall	.+430    	; 0x12fe <__fp_split3>
    1150:	98 f3       	brcs	.-26     	; 0x1138 <__divsf3+0x4>

00001152 <__divsf3_pse>:
    1152:	99 23       	and	r25, r25
    1154:	c9 f3       	breq	.-14     	; 0x1148 <__divsf3+0x14>
    1156:	55 23       	and	r21, r21
    1158:	b1 f3       	breq	.-20     	; 0x1146 <__divsf3+0x12>
    115a:	95 1b       	sub	r25, r21
    115c:	55 0b       	sbc	r21, r21
    115e:	bb 27       	eor	r27, r27
    1160:	aa 27       	eor	r26, r26
    1162:	62 17       	cp	r22, r18
    1164:	73 07       	cpc	r23, r19
    1166:	84 07       	cpc	r24, r20
    1168:	38 f0       	brcs	.+14     	; 0x1178 <__divsf3_pse+0x26>
    116a:	9f 5f       	subi	r25, 0xFF	; 255
    116c:	5f 4f       	sbci	r21, 0xFF	; 255
    116e:	22 0f       	add	r18, r18
    1170:	33 1f       	adc	r19, r19
    1172:	44 1f       	adc	r20, r20
    1174:	aa 1f       	adc	r26, r26
    1176:	a9 f3       	breq	.-22     	; 0x1162 <__divsf3_pse+0x10>
    1178:	33 d0       	rcall	.+102    	; 0x11e0 <__divsf3_pse+0x8e>
    117a:	0e 2e       	mov	r0, r30
    117c:	3a f0       	brmi	.+14     	; 0x118c <__divsf3_pse+0x3a>
    117e:	e0 e8       	ldi	r30, 0x80	; 128
    1180:	30 d0       	rcall	.+96     	; 0x11e2 <__divsf3_pse+0x90>
    1182:	91 50       	subi	r25, 0x01	; 1
    1184:	50 40       	sbci	r21, 0x00	; 0
    1186:	e6 95       	lsr	r30
    1188:	00 1c       	adc	r0, r0
    118a:	ca f7       	brpl	.-14     	; 0x117e <__divsf3_pse+0x2c>
    118c:	29 d0       	rcall	.+82     	; 0x11e0 <__divsf3_pse+0x8e>
    118e:	fe 2f       	mov	r31, r30
    1190:	27 d0       	rcall	.+78     	; 0x11e0 <__divsf3_pse+0x8e>
    1192:	66 0f       	add	r22, r22
    1194:	77 1f       	adc	r23, r23
    1196:	88 1f       	adc	r24, r24
    1198:	bb 1f       	adc	r27, r27
    119a:	26 17       	cp	r18, r22
    119c:	37 07       	cpc	r19, r23
    119e:	48 07       	cpc	r20, r24
    11a0:	ab 07       	cpc	r26, r27
    11a2:	b0 e8       	ldi	r27, 0x80	; 128
    11a4:	09 f0       	breq	.+2      	; 0x11a8 <__divsf3_pse+0x56>
    11a6:	bb 0b       	sbc	r27, r27
    11a8:	80 2d       	mov	r24, r0
    11aa:	bf 01       	movw	r22, r30
    11ac:	ff 27       	eor	r31, r31
    11ae:	93 58       	subi	r25, 0x83	; 131
    11b0:	5f 4f       	sbci	r21, 0xFF	; 255
    11b2:	2a f0       	brmi	.+10     	; 0x11be <__divsf3_pse+0x6c>
    11b4:	9e 3f       	cpi	r25, 0xFE	; 254
    11b6:	51 05       	cpc	r21, r1
    11b8:	68 f0       	brcs	.+26     	; 0x11d4 <__divsf3_pse+0x82>
    11ba:	79 c0       	rjmp	.+242    	; 0x12ae <__fp_inf>
    11bc:	c3 c0       	rjmp	.+390    	; 0x1344 <__fp_szero>
    11be:	5f 3f       	cpi	r21, 0xFF	; 255
    11c0:	ec f3       	brlt	.-6      	; 0x11bc <__divsf3_pse+0x6a>
    11c2:	98 3e       	cpi	r25, 0xE8	; 232
    11c4:	dc f3       	brlt	.-10     	; 0x11bc <__divsf3_pse+0x6a>
    11c6:	86 95       	lsr	r24
    11c8:	77 95       	ror	r23
    11ca:	67 95       	ror	r22
    11cc:	b7 95       	ror	r27
    11ce:	f7 95       	ror	r31
    11d0:	9f 5f       	subi	r25, 0xFF	; 255
    11d2:	c9 f7       	brne	.-14     	; 0x11c6 <__divsf3_pse+0x74>
    11d4:	88 0f       	add	r24, r24
    11d6:	91 1d       	adc	r25, r1
    11d8:	96 95       	lsr	r25
    11da:	87 95       	ror	r24
    11dc:	97 f9       	bld	r25, 7
    11de:	08 95       	ret
    11e0:	e1 e0       	ldi	r30, 0x01	; 1
    11e2:	66 0f       	add	r22, r22
    11e4:	77 1f       	adc	r23, r23
    11e6:	88 1f       	adc	r24, r24
    11e8:	bb 1f       	adc	r27, r27
    11ea:	62 17       	cp	r22, r18
    11ec:	73 07       	cpc	r23, r19
    11ee:	84 07       	cpc	r24, r20
    11f0:	ba 07       	cpc	r27, r26
    11f2:	20 f0       	brcs	.+8      	; 0x11fc <__divsf3_pse+0xaa>
    11f4:	62 1b       	sub	r22, r18
    11f6:	73 0b       	sbc	r23, r19
    11f8:	84 0b       	sbc	r24, r20
    11fa:	ba 0b       	sbc	r27, r26
    11fc:	ee 1f       	adc	r30, r30
    11fe:	88 f7       	brcc	.-30     	; 0x11e2 <__divsf3_pse+0x90>
    1200:	e0 95       	com	r30
    1202:	08 95       	ret

00001204 <__fixsfsi>:
    1204:	04 d0       	rcall	.+8      	; 0x120e <__fixunssfsi>
    1206:	68 94       	set
    1208:	b1 11       	cpse	r27, r1
    120a:	9c c0       	rjmp	.+312    	; 0x1344 <__fp_szero>
    120c:	08 95       	ret

0000120e <__fixunssfsi>:
    120e:	7f d0       	rcall	.+254    	; 0x130e <__fp_splitA>
    1210:	88 f0       	brcs	.+34     	; 0x1234 <__fixunssfsi+0x26>
    1212:	9f 57       	subi	r25, 0x7F	; 127
    1214:	90 f0       	brcs	.+36     	; 0x123a <__fixunssfsi+0x2c>
    1216:	b9 2f       	mov	r27, r25
    1218:	99 27       	eor	r25, r25
    121a:	b7 51       	subi	r27, 0x17	; 23
    121c:	a0 f0       	brcs	.+40     	; 0x1246 <__fixunssfsi+0x38>
    121e:	d1 f0       	breq	.+52     	; 0x1254 <__fixunssfsi+0x46>
    1220:	66 0f       	add	r22, r22
    1222:	77 1f       	adc	r23, r23
    1224:	88 1f       	adc	r24, r24
    1226:	99 1f       	adc	r25, r25
    1228:	1a f0       	brmi	.+6      	; 0x1230 <__fixunssfsi+0x22>
    122a:	ba 95       	dec	r27
    122c:	c9 f7       	brne	.-14     	; 0x1220 <__fixunssfsi+0x12>
    122e:	12 c0       	rjmp	.+36     	; 0x1254 <__fixunssfsi+0x46>
    1230:	b1 30       	cpi	r27, 0x01	; 1
    1232:	81 f0       	breq	.+32     	; 0x1254 <__fixunssfsi+0x46>
    1234:	86 d0       	rcall	.+268    	; 0x1342 <__fp_zero>
    1236:	b1 e0       	ldi	r27, 0x01	; 1
    1238:	08 95       	ret
    123a:	83 c0       	rjmp	.+262    	; 0x1342 <__fp_zero>
    123c:	67 2f       	mov	r22, r23
    123e:	78 2f       	mov	r23, r24
    1240:	88 27       	eor	r24, r24
    1242:	b8 5f       	subi	r27, 0xF8	; 248
    1244:	39 f0       	breq	.+14     	; 0x1254 <__fixunssfsi+0x46>
    1246:	b9 3f       	cpi	r27, 0xF9	; 249
    1248:	cc f3       	brlt	.-14     	; 0x123c <__fixunssfsi+0x2e>
    124a:	86 95       	lsr	r24
    124c:	77 95       	ror	r23
    124e:	67 95       	ror	r22
    1250:	b3 95       	inc	r27
    1252:	d9 f7       	brne	.-10     	; 0x124a <__fixunssfsi+0x3c>
    1254:	3e f4       	brtc	.+14     	; 0x1264 <__fixunssfsi+0x56>
    1256:	90 95       	com	r25
    1258:	80 95       	com	r24
    125a:	70 95       	com	r23
    125c:	61 95       	neg	r22
    125e:	7f 4f       	sbci	r23, 0xFF	; 255
    1260:	8f 4f       	sbci	r24, 0xFF	; 255
    1262:	9f 4f       	sbci	r25, 0xFF	; 255
    1264:	08 95       	ret

00001266 <__fp_cmp>:
    1266:	99 0f       	add	r25, r25
    1268:	00 08       	sbc	r0, r0
    126a:	55 0f       	add	r21, r21
    126c:	aa 0b       	sbc	r26, r26
    126e:	e0 e8       	ldi	r30, 0x80	; 128
    1270:	fe ef       	ldi	r31, 0xFE	; 254
    1272:	16 16       	cp	r1, r22
    1274:	17 06       	cpc	r1, r23
    1276:	e8 07       	cpc	r30, r24
    1278:	f9 07       	cpc	r31, r25
    127a:	c0 f0       	brcs	.+48     	; 0x12ac <__fp_cmp+0x46>
    127c:	12 16       	cp	r1, r18
    127e:	13 06       	cpc	r1, r19
    1280:	e4 07       	cpc	r30, r20
    1282:	f5 07       	cpc	r31, r21
    1284:	98 f0       	brcs	.+38     	; 0x12ac <__fp_cmp+0x46>
    1286:	62 1b       	sub	r22, r18
    1288:	73 0b       	sbc	r23, r19
    128a:	84 0b       	sbc	r24, r20
    128c:	95 0b       	sbc	r25, r21
    128e:	39 f4       	brne	.+14     	; 0x129e <__fp_cmp+0x38>
    1290:	0a 26       	eor	r0, r26
    1292:	61 f0       	breq	.+24     	; 0x12ac <__fp_cmp+0x46>
    1294:	23 2b       	or	r18, r19
    1296:	24 2b       	or	r18, r20
    1298:	25 2b       	or	r18, r21
    129a:	21 f4       	brne	.+8      	; 0x12a4 <__fp_cmp+0x3e>
    129c:	08 95       	ret
    129e:	0a 26       	eor	r0, r26
    12a0:	09 f4       	brne	.+2      	; 0x12a4 <__fp_cmp+0x3e>
    12a2:	a1 40       	sbci	r26, 0x01	; 1
    12a4:	a6 95       	lsr	r26
    12a6:	8f ef       	ldi	r24, 0xFF	; 255
    12a8:	81 1d       	adc	r24, r1
    12aa:	81 1d       	adc	r24, r1
    12ac:	08 95       	ret

000012ae <__fp_inf>:
    12ae:	97 f9       	bld	r25, 7
    12b0:	9f 67       	ori	r25, 0x7F	; 127
    12b2:	80 e8       	ldi	r24, 0x80	; 128
    12b4:	70 e0       	ldi	r23, 0x00	; 0
    12b6:	60 e0       	ldi	r22, 0x00	; 0
    12b8:	08 95       	ret

000012ba <__fp_nan>:
    12ba:	9f ef       	ldi	r25, 0xFF	; 255
    12bc:	80 ec       	ldi	r24, 0xC0	; 192
    12be:	08 95       	ret

000012c0 <__fp_pscA>:
    12c0:	00 24       	eor	r0, r0
    12c2:	0a 94       	dec	r0
    12c4:	16 16       	cp	r1, r22
    12c6:	17 06       	cpc	r1, r23
    12c8:	18 06       	cpc	r1, r24
    12ca:	09 06       	cpc	r0, r25
    12cc:	08 95       	ret

000012ce <__fp_pscB>:
    12ce:	00 24       	eor	r0, r0
    12d0:	0a 94       	dec	r0
    12d2:	12 16       	cp	r1, r18
    12d4:	13 06       	cpc	r1, r19
    12d6:	14 06       	cpc	r1, r20
    12d8:	05 06       	cpc	r0, r21
    12da:	08 95       	ret

000012dc <__fp_round>:
    12dc:	09 2e       	mov	r0, r25
    12de:	03 94       	inc	r0
    12e0:	00 0c       	add	r0, r0
    12e2:	11 f4       	brne	.+4      	; 0x12e8 <__fp_round+0xc>
    12e4:	88 23       	and	r24, r24
    12e6:	52 f0       	brmi	.+20     	; 0x12fc <__fp_round+0x20>
    12e8:	bb 0f       	add	r27, r27
    12ea:	40 f4       	brcc	.+16     	; 0x12fc <__fp_round+0x20>
    12ec:	bf 2b       	or	r27, r31
    12ee:	11 f4       	brne	.+4      	; 0x12f4 <__fp_round+0x18>
    12f0:	60 ff       	sbrs	r22, 0
    12f2:	04 c0       	rjmp	.+8      	; 0x12fc <__fp_round+0x20>
    12f4:	6f 5f       	subi	r22, 0xFF	; 255
    12f6:	7f 4f       	sbci	r23, 0xFF	; 255
    12f8:	8f 4f       	sbci	r24, 0xFF	; 255
    12fa:	9f 4f       	sbci	r25, 0xFF	; 255
    12fc:	08 95       	ret

000012fe <__fp_split3>:
    12fe:	57 fd       	sbrc	r21, 7
    1300:	90 58       	subi	r25, 0x80	; 128
    1302:	44 0f       	add	r20, r20
    1304:	55 1f       	adc	r21, r21
    1306:	59 f0       	breq	.+22     	; 0x131e <__fp_splitA+0x10>
    1308:	5f 3f       	cpi	r21, 0xFF	; 255
    130a:	71 f0       	breq	.+28     	; 0x1328 <__fp_splitA+0x1a>
    130c:	47 95       	ror	r20

0000130e <__fp_splitA>:
    130e:	88 0f       	add	r24, r24
    1310:	97 fb       	bst	r25, 7
    1312:	99 1f       	adc	r25, r25
    1314:	61 f0       	breq	.+24     	; 0x132e <__fp_splitA+0x20>
    1316:	9f 3f       	cpi	r25, 0xFF	; 255
    1318:	79 f0       	breq	.+30     	; 0x1338 <__fp_splitA+0x2a>
    131a:	87 95       	ror	r24
    131c:	08 95       	ret
    131e:	12 16       	cp	r1, r18
    1320:	13 06       	cpc	r1, r19
    1322:	14 06       	cpc	r1, r20
    1324:	55 1f       	adc	r21, r21
    1326:	f2 cf       	rjmp	.-28     	; 0x130c <__fp_split3+0xe>
    1328:	46 95       	lsr	r20
    132a:	f1 df       	rcall	.-30     	; 0x130e <__fp_splitA>
    132c:	08 c0       	rjmp	.+16     	; 0x133e <__fp_splitA+0x30>
    132e:	16 16       	cp	r1, r22
    1330:	17 06       	cpc	r1, r23
    1332:	18 06       	cpc	r1, r24
    1334:	99 1f       	adc	r25, r25
    1336:	f1 cf       	rjmp	.-30     	; 0x131a <__fp_splitA+0xc>
    1338:	86 95       	lsr	r24
    133a:	71 05       	cpc	r23, r1
    133c:	61 05       	cpc	r22, r1
    133e:	08 94       	sec
    1340:	08 95       	ret

00001342 <__fp_zero>:
    1342:	e8 94       	clt

00001344 <__fp_szero>:
    1344:	bb 27       	eor	r27, r27
    1346:	66 27       	eor	r22, r22
    1348:	77 27       	eor	r23, r23
    134a:	cb 01       	movw	r24, r22
    134c:	97 f9       	bld	r25, 7
    134e:	08 95       	ret

00001350 <__gesf2>:
    1350:	8a df       	rcall	.-236    	; 0x1266 <__fp_cmp>
    1352:	08 f4       	brcc	.+2      	; 0x1356 <__gesf2+0x6>
    1354:	8f ef       	ldi	r24, 0xFF	; 255
    1356:	08 95       	ret

00001358 <__mulsf3>:
    1358:	0b d0       	rcall	.+22     	; 0x1370 <__mulsf3x>
    135a:	c0 cf       	rjmp	.-128    	; 0x12dc <__fp_round>
    135c:	b1 df       	rcall	.-158    	; 0x12c0 <__fp_pscA>
    135e:	28 f0       	brcs	.+10     	; 0x136a <__mulsf3+0x12>
    1360:	b6 df       	rcall	.-148    	; 0x12ce <__fp_pscB>
    1362:	18 f0       	brcs	.+6      	; 0x136a <__mulsf3+0x12>
    1364:	95 23       	and	r25, r21
    1366:	09 f0       	breq	.+2      	; 0x136a <__mulsf3+0x12>
    1368:	a2 cf       	rjmp	.-188    	; 0x12ae <__fp_inf>
    136a:	a7 cf       	rjmp	.-178    	; 0x12ba <__fp_nan>
    136c:	11 24       	eor	r1, r1
    136e:	ea cf       	rjmp	.-44     	; 0x1344 <__fp_szero>

00001370 <__mulsf3x>:
    1370:	c6 df       	rcall	.-116    	; 0x12fe <__fp_split3>
    1372:	a0 f3       	brcs	.-24     	; 0x135c <__mulsf3+0x4>

00001374 <__mulsf3_pse>:
    1374:	95 9f       	mul	r25, r21
    1376:	d1 f3       	breq	.-12     	; 0x136c <__mulsf3+0x14>
    1378:	95 0f       	add	r25, r21
    137a:	50 e0       	ldi	r21, 0x00	; 0
    137c:	55 1f       	adc	r21, r21
    137e:	62 9f       	mul	r22, r18
    1380:	f0 01       	movw	r30, r0
    1382:	72 9f       	mul	r23, r18
    1384:	bb 27       	eor	r27, r27
    1386:	f0 0d       	add	r31, r0
    1388:	b1 1d       	adc	r27, r1
    138a:	63 9f       	mul	r22, r19
    138c:	aa 27       	eor	r26, r26
    138e:	f0 0d       	add	r31, r0
    1390:	b1 1d       	adc	r27, r1
    1392:	aa 1f       	adc	r26, r26
    1394:	64 9f       	mul	r22, r20
    1396:	66 27       	eor	r22, r22
    1398:	b0 0d       	add	r27, r0
    139a:	a1 1d       	adc	r26, r1
    139c:	66 1f       	adc	r22, r22
    139e:	82 9f       	mul	r24, r18
    13a0:	22 27       	eor	r18, r18
    13a2:	b0 0d       	add	r27, r0
    13a4:	a1 1d       	adc	r26, r1
    13a6:	62 1f       	adc	r22, r18
    13a8:	73 9f       	mul	r23, r19
    13aa:	b0 0d       	add	r27, r0
    13ac:	a1 1d       	adc	r26, r1
    13ae:	62 1f       	adc	r22, r18
    13b0:	83 9f       	mul	r24, r19
    13b2:	a0 0d       	add	r26, r0
    13b4:	61 1d       	adc	r22, r1
    13b6:	22 1f       	adc	r18, r18
    13b8:	74 9f       	mul	r23, r20
    13ba:	33 27       	eor	r19, r19
    13bc:	a0 0d       	add	r26, r0
    13be:	61 1d       	adc	r22, r1
    13c0:	23 1f       	adc	r18, r19
    13c2:	84 9f       	mul	r24, r20
    13c4:	60 0d       	add	r22, r0
    13c6:	21 1d       	adc	r18, r1
    13c8:	82 2f       	mov	r24, r18
    13ca:	76 2f       	mov	r23, r22
    13cc:	6a 2f       	mov	r22, r26
    13ce:	11 24       	eor	r1, r1
    13d0:	9f 57       	subi	r25, 0x7F	; 127
    13d2:	50 40       	sbci	r21, 0x00	; 0
    13d4:	8a f0       	brmi	.+34     	; 0x13f8 <__mulsf3_pse+0x84>
    13d6:	e1 f0       	breq	.+56     	; 0x1410 <__mulsf3_pse+0x9c>
    13d8:	88 23       	and	r24, r24
    13da:	4a f0       	brmi	.+18     	; 0x13ee <__mulsf3_pse+0x7a>
    13dc:	ee 0f       	add	r30, r30
    13de:	ff 1f       	adc	r31, r31
    13e0:	bb 1f       	adc	r27, r27
    13e2:	66 1f       	adc	r22, r22
    13e4:	77 1f       	adc	r23, r23
    13e6:	88 1f       	adc	r24, r24
    13e8:	91 50       	subi	r25, 0x01	; 1
    13ea:	50 40       	sbci	r21, 0x00	; 0
    13ec:	a9 f7       	brne	.-22     	; 0x13d8 <__mulsf3_pse+0x64>
    13ee:	9e 3f       	cpi	r25, 0xFE	; 254
    13f0:	51 05       	cpc	r21, r1
    13f2:	70 f0       	brcs	.+28     	; 0x1410 <__mulsf3_pse+0x9c>
    13f4:	5c cf       	rjmp	.-328    	; 0x12ae <__fp_inf>
    13f6:	a6 cf       	rjmp	.-180    	; 0x1344 <__fp_szero>
    13f8:	5f 3f       	cpi	r21, 0xFF	; 255
    13fa:	ec f3       	brlt	.-6      	; 0x13f6 <__mulsf3_pse+0x82>
    13fc:	98 3e       	cpi	r25, 0xE8	; 232
    13fe:	dc f3       	brlt	.-10     	; 0x13f6 <__mulsf3_pse+0x82>
    1400:	86 95       	lsr	r24
    1402:	77 95       	ror	r23
    1404:	67 95       	ror	r22
    1406:	b7 95       	ror	r27
    1408:	f7 95       	ror	r31
    140a:	e7 95       	ror	r30
    140c:	9f 5f       	subi	r25, 0xFF	; 255
    140e:	c1 f7       	brne	.-16     	; 0x1400 <__mulsf3_pse+0x8c>
    1410:	fe 2b       	or	r31, r30
    1412:	88 0f       	add	r24, r24
    1414:	91 1d       	adc	r25, r1
    1416:	96 95       	lsr	r25
    1418:	87 95       	ror	r24
    141a:	97 f9       	bld	r25, 7
    141c:	08 95       	ret

0000141e <__udivmodqi4>:
    141e:	99 1b       	sub	r25, r25
    1420:	79 e0       	ldi	r23, 0x09	; 9
    1422:	04 c0       	rjmp	.+8      	; 0x142c <__udivmodqi4_ep>

00001424 <__udivmodqi4_loop>:
    1424:	99 1f       	adc	r25, r25
    1426:	96 17       	cp	r25, r22
    1428:	08 f0       	brcs	.+2      	; 0x142c <__udivmodqi4_ep>
    142a:	96 1b       	sub	r25, r22

0000142c <__udivmodqi4_ep>:
    142c:	88 1f       	adc	r24, r24
    142e:	7a 95       	dec	r23
    1430:	c9 f7       	brne	.-14     	; 0x1424 <__udivmodqi4_loop>
    1432:	80 95       	com	r24
    1434:	08 95       	ret

00001436 <__udivmodhi4>:
    1436:	aa 1b       	sub	r26, r26
    1438:	bb 1b       	sub	r27, r27
    143a:	51 e1       	ldi	r21, 0x11	; 17
    143c:	07 c0       	rjmp	.+14     	; 0x144c <__udivmodhi4_ep>

0000143e <__udivmodhi4_loop>:
    143e:	aa 1f       	adc	r26, r26
    1440:	bb 1f       	adc	r27, r27
    1442:	a6 17       	cp	r26, r22
    1444:	b7 07       	cpc	r27, r23
    1446:	10 f0       	brcs	.+4      	; 0x144c <__udivmodhi4_ep>
    1448:	a6 1b       	sub	r26, r22
    144a:	b7 0b       	sbc	r27, r23

0000144c <__udivmodhi4_ep>:
    144c:	88 1f       	adc	r24, r24
    144e:	99 1f       	adc	r25, r25
    1450:	5a 95       	dec	r21
    1452:	a9 f7       	brne	.-22     	; 0x143e <__udivmodhi4_loop>
    1454:	80 95       	com	r24
    1456:	90 95       	com	r25
    1458:	bc 01       	movw	r22, r24
    145a:	cd 01       	movw	r24, r26
    145c:	08 95       	ret

0000145e <__divmodhi4>:
    145e:	97 fb       	bst	r25, 7
    1460:	07 2e       	mov	r0, r23
    1462:	16 f4       	brtc	.+4      	; 0x1468 <__divmodhi4+0xa>
    1464:	00 94       	com	r0
    1466:	06 d0       	rcall	.+12     	; 0x1474 <__divmodhi4_neg1>
    1468:	77 fd       	sbrc	r23, 7
    146a:	08 d0       	rcall	.+16     	; 0x147c <__divmodhi4_neg2>
    146c:	e4 df       	rcall	.-56     	; 0x1436 <__udivmodhi4>
    146e:	07 fc       	sbrc	r0, 7
    1470:	05 d0       	rcall	.+10     	; 0x147c <__divmodhi4_neg2>
    1472:	3e f4       	brtc	.+14     	; 0x1482 <__divmodhi4_exit>

00001474 <__divmodhi4_neg1>:
    1474:	90 95       	com	r25
    1476:	81 95       	neg	r24
    1478:	9f 4f       	sbci	r25, 0xFF	; 255
    147a:	08 95       	ret

0000147c <__divmodhi4_neg2>:
    147c:	70 95       	com	r23
    147e:	61 95       	neg	r22
    1480:	7f 4f       	sbci	r23, 0xFF	; 255

00001482 <__divmodhi4_exit>:
    1482:	08 95       	ret

00001484 <__muldi3>:
    1484:	df 93       	push	r29
    1486:	cf 93       	push	r28
    1488:	1f 93       	push	r17
    148a:	0f 93       	push	r16
    148c:	9a 9d       	mul	r25, r10
    148e:	f0 2d       	mov	r31, r0
    1490:	21 9f       	mul	r18, r17
    1492:	f0 0d       	add	r31, r0
    1494:	8b 9d       	mul	r24, r11
    1496:	f0 0d       	add	r31, r0
    1498:	8a 9d       	mul	r24, r10
    149a:	e0 2d       	mov	r30, r0
    149c:	f1 0d       	add	r31, r1
    149e:	03 9f       	mul	r16, r19
    14a0:	f0 0d       	add	r31, r0
    14a2:	02 9f       	mul	r16, r18
    14a4:	e0 0d       	add	r30, r0
    14a6:	f1 1d       	adc	r31, r1
    14a8:	4e 9d       	mul	r20, r14
    14aa:	e0 0d       	add	r30, r0
    14ac:	f1 1d       	adc	r31, r1
    14ae:	5e 9d       	mul	r21, r14
    14b0:	f0 0d       	add	r31, r0
    14b2:	4f 9d       	mul	r20, r15
    14b4:	f0 0d       	add	r31, r0
    14b6:	7f 93       	push	r23
    14b8:	6f 93       	push	r22
    14ba:	bf 92       	push	r11
    14bc:	af 92       	push	r10
    14be:	5f 93       	push	r21
    14c0:	4f 93       	push	r20
    14c2:	d5 01       	movw	r26, r10
    14c4:	39 d0       	rcall	.+114    	; 0x1538 <__umulhisi3>
    14c6:	8b 01       	movw	r16, r22
    14c8:	ac 01       	movw	r20, r24
    14ca:	d7 01       	movw	r26, r14
    14cc:	35 d0       	rcall	.+106    	; 0x1538 <__umulhisi3>
    14ce:	eb 01       	movw	r28, r22
    14d0:	e8 0f       	add	r30, r24
    14d2:	f9 1f       	adc	r31, r25
    14d4:	d6 01       	movw	r26, r12
    14d6:	1f d0       	rcall	.+62     	; 0x1516 <__muldi3_6>
    14d8:	2f 91       	pop	r18
    14da:	3f 91       	pop	r19
    14dc:	d6 01       	movw	r26, r12
    14de:	2c d0       	rcall	.+88     	; 0x1538 <__umulhisi3>
    14e0:	c6 0f       	add	r28, r22
    14e2:	d7 1f       	adc	r29, r23
    14e4:	e8 1f       	adc	r30, r24
    14e6:	f9 1f       	adc	r31, r25
    14e8:	af 91       	pop	r26
    14ea:	bf 91       	pop	r27
    14ec:	14 d0       	rcall	.+40     	; 0x1516 <__muldi3_6>
    14ee:	2f 91       	pop	r18
    14f0:	3f 91       	pop	r19
    14f2:	22 d0       	rcall	.+68     	; 0x1538 <__umulhisi3>
    14f4:	c6 0f       	add	r28, r22
    14f6:	d7 1f       	adc	r29, r23
    14f8:	e8 1f       	adc	r30, r24
    14fa:	f9 1f       	adc	r31, r25
    14fc:	d6 01       	movw	r26, r12
    14fe:	1c d0       	rcall	.+56     	; 0x1538 <__umulhisi3>
    1500:	e6 0f       	add	r30, r22
    1502:	f7 1f       	adc	r31, r23
    1504:	98 01       	movw	r18, r16
    1506:	be 01       	movw	r22, r28
    1508:	cf 01       	movw	r24, r30
    150a:	11 24       	eor	r1, r1
    150c:	0f 91       	pop	r16
    150e:	1f 91       	pop	r17
    1510:	cf 91       	pop	r28
    1512:	df 91       	pop	r29
    1514:	08 95       	ret

00001516 <__muldi3_6>:
    1516:	10 d0       	rcall	.+32     	; 0x1538 <__umulhisi3>
    1518:	46 0f       	add	r20, r22
    151a:	57 1f       	adc	r21, r23
    151c:	c8 1f       	adc	r28, r24
    151e:	d9 1f       	adc	r29, r25
    1520:	08 f4       	brcc	.+2      	; 0x1524 <__muldi3_6+0xe>
    1522:	31 96       	adiw	r30, 0x01	; 1
    1524:	08 95       	ret

00001526 <__adddi3>:
    1526:	2a 0d       	add	r18, r10
    1528:	3b 1d       	adc	r19, r11
    152a:	4c 1d       	adc	r20, r12
    152c:	5d 1d       	adc	r21, r13
    152e:	6e 1d       	adc	r22, r14
    1530:	7f 1d       	adc	r23, r15
    1532:	80 1f       	adc	r24, r16
    1534:	91 1f       	adc	r25, r17
    1536:	08 95       	ret

00001538 <__umulhisi3>:
    1538:	a2 9f       	mul	r26, r18
    153a:	b0 01       	movw	r22, r0
    153c:	b3 9f       	mul	r27, r19
    153e:	c0 01       	movw	r24, r0
    1540:	a3 9f       	mul	r26, r19
    1542:	70 0d       	add	r23, r0
    1544:	81 1d       	adc	r24, r1
    1546:	11 24       	eor	r1, r1
    1548:	91 1d       	adc	r25, r1
    154a:	b2 9f       	mul	r27, r18
    154c:	70 0d       	add	r23, r0
    154e:	81 1d       	adc	r24, r1
    1550:	11 24       	eor	r1, r1
    1552:	91 1d       	adc	r25, r1
    1554:	08 95       	ret

00001556 <malloc>:
    1556:	cf 93       	push	r28
    1558:	df 93       	push	r29
    155a:	82 30       	cpi	r24, 0x02	; 2
    155c:	91 05       	cpc	r25, r1
    155e:	10 f4       	brcc	.+4      	; 0x1564 <malloc+0xe>
    1560:	82 e0       	ldi	r24, 0x02	; 2
    1562:	90 e0       	ldi	r25, 0x00	; 0
    1564:	e0 91 46 1e 	lds	r30, 0x1E46
    1568:	f0 91 47 1e 	lds	r31, 0x1E47
    156c:	20 e0       	ldi	r18, 0x00	; 0
    156e:	30 e0       	ldi	r19, 0x00	; 0
    1570:	c0 e0       	ldi	r28, 0x00	; 0
    1572:	d0 e0       	ldi	r29, 0x00	; 0
    1574:	30 97       	sbiw	r30, 0x00	; 0
    1576:	11 f1       	breq	.+68     	; 0x15bc <malloc+0x66>
    1578:	40 81       	ld	r20, Z
    157a:	51 81       	ldd	r21, Z+1	; 0x01
    157c:	48 17       	cp	r20, r24
    157e:	59 07       	cpc	r21, r25
    1580:	c0 f0       	brcs	.+48     	; 0x15b2 <malloc+0x5c>
    1582:	48 17       	cp	r20, r24
    1584:	59 07       	cpc	r21, r25
    1586:	61 f4       	brne	.+24     	; 0x15a0 <malloc+0x4a>
    1588:	82 81       	ldd	r24, Z+2	; 0x02
    158a:	93 81       	ldd	r25, Z+3	; 0x03
    158c:	20 97       	sbiw	r28, 0x00	; 0
    158e:	19 f0       	breq	.+6      	; 0x1596 <malloc+0x40>
    1590:	9b 83       	std	Y+3, r25	; 0x03
    1592:	8a 83       	std	Y+2, r24	; 0x02
    1594:	2b c0       	rjmp	.+86     	; 0x15ec <malloc+0x96>
    1596:	90 93 47 1e 	sts	0x1E47, r25
    159a:	80 93 46 1e 	sts	0x1E46, r24
    159e:	26 c0       	rjmp	.+76     	; 0x15ec <malloc+0x96>
    15a0:	21 15       	cp	r18, r1
    15a2:	31 05       	cpc	r19, r1
    15a4:	19 f0       	breq	.+6      	; 0x15ac <malloc+0x56>
    15a6:	42 17       	cp	r20, r18
    15a8:	53 07       	cpc	r21, r19
    15aa:	18 f4       	brcc	.+6      	; 0x15b2 <malloc+0x5c>
    15ac:	9a 01       	movw	r18, r20
    15ae:	be 01       	movw	r22, r28
    15b0:	df 01       	movw	r26, r30
    15b2:	ef 01       	movw	r28, r30
    15b4:	02 80       	ldd	r0, Z+2	; 0x02
    15b6:	f3 81       	ldd	r31, Z+3	; 0x03
    15b8:	e0 2d       	mov	r30, r0
    15ba:	dc cf       	rjmp	.-72     	; 0x1574 <malloc+0x1e>
    15bc:	21 15       	cp	r18, r1
    15be:	31 05       	cpc	r19, r1
    15c0:	09 f1       	breq	.+66     	; 0x1604 <malloc+0xae>
    15c2:	28 1b       	sub	r18, r24
    15c4:	39 0b       	sbc	r19, r25
    15c6:	24 30       	cpi	r18, 0x04	; 4
    15c8:	31 05       	cpc	r19, r1
    15ca:	90 f4       	brcc	.+36     	; 0x15f0 <malloc+0x9a>
    15cc:	12 96       	adiw	r26, 0x02	; 2
    15ce:	8d 91       	ld	r24, X+
    15d0:	9c 91       	ld	r25, X
    15d2:	13 97       	sbiw	r26, 0x03	; 3
    15d4:	61 15       	cp	r22, r1
    15d6:	71 05       	cpc	r23, r1
    15d8:	21 f0       	breq	.+8      	; 0x15e2 <malloc+0x8c>
    15da:	fb 01       	movw	r30, r22
    15dc:	93 83       	std	Z+3, r25	; 0x03
    15de:	82 83       	std	Z+2, r24	; 0x02
    15e0:	04 c0       	rjmp	.+8      	; 0x15ea <malloc+0x94>
    15e2:	90 93 47 1e 	sts	0x1E47, r25
    15e6:	80 93 46 1e 	sts	0x1E46, r24
    15ea:	fd 01       	movw	r30, r26
    15ec:	32 96       	adiw	r30, 0x02	; 2
    15ee:	44 c0       	rjmp	.+136    	; 0x1678 <malloc+0x122>
    15f0:	fd 01       	movw	r30, r26
    15f2:	e2 0f       	add	r30, r18
    15f4:	f3 1f       	adc	r31, r19
    15f6:	81 93       	st	Z+, r24
    15f8:	91 93       	st	Z+, r25
    15fa:	22 50       	subi	r18, 0x02	; 2
    15fc:	31 09       	sbc	r19, r1
    15fe:	2d 93       	st	X+, r18
    1600:	3c 93       	st	X, r19
    1602:	3a c0       	rjmp	.+116    	; 0x1678 <malloc+0x122>
    1604:	20 91 44 1e 	lds	r18, 0x1E44
    1608:	30 91 45 1e 	lds	r19, 0x1E45
    160c:	23 2b       	or	r18, r19
    160e:	41 f4       	brne	.+16     	; 0x1620 <malloc+0xca>
    1610:	20 91 02 01 	lds	r18, 0x0102
    1614:	30 91 03 01 	lds	r19, 0x0103
    1618:	30 93 45 1e 	sts	0x1E45, r19
    161c:	20 93 44 1e 	sts	0x1E44, r18
    1620:	20 91 00 01 	lds	r18, 0x0100
    1624:	30 91 01 01 	lds	r19, 0x0101
    1628:	21 15       	cp	r18, r1
    162a:	31 05       	cpc	r19, r1
    162c:	41 f4       	brne	.+16     	; 0x163e <malloc+0xe8>
    162e:	2d b7       	in	r18, 0x3d	; 61
    1630:	3e b7       	in	r19, 0x3e	; 62
    1632:	40 91 04 01 	lds	r20, 0x0104
    1636:	50 91 05 01 	lds	r21, 0x0105
    163a:	24 1b       	sub	r18, r20
    163c:	35 0b       	sbc	r19, r21
    163e:	e0 91 44 1e 	lds	r30, 0x1E44
    1642:	f0 91 45 1e 	lds	r31, 0x1E45
    1646:	e2 17       	cp	r30, r18
    1648:	f3 07       	cpc	r31, r19
    164a:	a0 f4       	brcc	.+40     	; 0x1674 <malloc+0x11e>
    164c:	2e 1b       	sub	r18, r30
    164e:	3f 0b       	sbc	r19, r31
    1650:	28 17       	cp	r18, r24
    1652:	39 07       	cpc	r19, r25
    1654:	78 f0       	brcs	.+30     	; 0x1674 <malloc+0x11e>
    1656:	ac 01       	movw	r20, r24
    1658:	4e 5f       	subi	r20, 0xFE	; 254
    165a:	5f 4f       	sbci	r21, 0xFF	; 255
    165c:	24 17       	cp	r18, r20
    165e:	35 07       	cpc	r19, r21
    1660:	48 f0       	brcs	.+18     	; 0x1674 <malloc+0x11e>
    1662:	4e 0f       	add	r20, r30
    1664:	5f 1f       	adc	r21, r31
    1666:	50 93 45 1e 	sts	0x1E45, r21
    166a:	40 93 44 1e 	sts	0x1E44, r20
    166e:	81 93       	st	Z+, r24
    1670:	91 93       	st	Z+, r25
    1672:	02 c0       	rjmp	.+4      	; 0x1678 <malloc+0x122>
    1674:	e0 e0       	ldi	r30, 0x00	; 0
    1676:	f0 e0       	ldi	r31, 0x00	; 0
    1678:	cf 01       	movw	r24, r30
    167a:	df 91       	pop	r29
    167c:	cf 91       	pop	r28
    167e:	08 95       	ret

00001680 <free>:
    1680:	0f 93       	push	r16
    1682:	1f 93       	push	r17
    1684:	cf 93       	push	r28
    1686:	df 93       	push	r29
    1688:	00 97       	sbiw	r24, 0x00	; 0
    168a:	09 f4       	brne	.+2      	; 0x168e <free+0xe>
    168c:	8c c0       	rjmp	.+280    	; 0x17a6 <free+0x126>
    168e:	fc 01       	movw	r30, r24
    1690:	32 97       	sbiw	r30, 0x02	; 2
    1692:	13 82       	std	Z+3, r1	; 0x03
    1694:	12 82       	std	Z+2, r1	; 0x02
    1696:	00 91 46 1e 	lds	r16, 0x1E46
    169a:	10 91 47 1e 	lds	r17, 0x1E47
    169e:	01 15       	cp	r16, r1
    16a0:	11 05       	cpc	r17, r1
    16a2:	81 f4       	brne	.+32     	; 0x16c4 <free+0x44>
    16a4:	20 81       	ld	r18, Z
    16a6:	31 81       	ldd	r19, Z+1	; 0x01
    16a8:	82 0f       	add	r24, r18
    16aa:	93 1f       	adc	r25, r19
    16ac:	20 91 44 1e 	lds	r18, 0x1E44
    16b0:	30 91 45 1e 	lds	r19, 0x1E45
    16b4:	28 17       	cp	r18, r24
    16b6:	39 07       	cpc	r19, r25
    16b8:	79 f5       	brne	.+94     	; 0x1718 <free+0x98>
    16ba:	f0 93 45 1e 	sts	0x1E45, r31
    16be:	e0 93 44 1e 	sts	0x1E44, r30
    16c2:	71 c0       	rjmp	.+226    	; 0x17a6 <free+0x126>
    16c4:	d8 01       	movw	r26, r16
    16c6:	40 e0       	ldi	r20, 0x00	; 0
    16c8:	50 e0       	ldi	r21, 0x00	; 0
    16ca:	ae 17       	cp	r26, r30
    16cc:	bf 07       	cpc	r27, r31
    16ce:	50 f4       	brcc	.+20     	; 0x16e4 <free+0x64>
    16d0:	12 96       	adiw	r26, 0x02	; 2
    16d2:	2d 91       	ld	r18, X+
    16d4:	3c 91       	ld	r19, X
    16d6:	13 97       	sbiw	r26, 0x03	; 3
    16d8:	ad 01       	movw	r20, r26
    16da:	21 15       	cp	r18, r1
    16dc:	31 05       	cpc	r19, r1
    16de:	09 f1       	breq	.+66     	; 0x1722 <free+0xa2>
    16e0:	d9 01       	movw	r26, r18
    16e2:	f3 cf       	rjmp	.-26     	; 0x16ca <free+0x4a>
    16e4:	9d 01       	movw	r18, r26
    16e6:	da 01       	movw	r26, r20
    16e8:	33 83       	std	Z+3, r19	; 0x03
    16ea:	22 83       	std	Z+2, r18	; 0x02
    16ec:	60 81       	ld	r22, Z
    16ee:	71 81       	ldd	r23, Z+1	; 0x01
    16f0:	86 0f       	add	r24, r22
    16f2:	97 1f       	adc	r25, r23
    16f4:	82 17       	cp	r24, r18
    16f6:	93 07       	cpc	r25, r19
    16f8:	69 f4       	brne	.+26     	; 0x1714 <free+0x94>
    16fa:	ec 01       	movw	r28, r24
    16fc:	28 81       	ld	r18, Y
    16fe:	39 81       	ldd	r19, Y+1	; 0x01
    1700:	26 0f       	add	r18, r22
    1702:	37 1f       	adc	r19, r23
    1704:	2e 5f       	subi	r18, 0xFE	; 254
    1706:	3f 4f       	sbci	r19, 0xFF	; 255
    1708:	31 83       	std	Z+1, r19	; 0x01
    170a:	20 83       	st	Z, r18
    170c:	8a 81       	ldd	r24, Y+2	; 0x02
    170e:	9b 81       	ldd	r25, Y+3	; 0x03
    1710:	93 83       	std	Z+3, r25	; 0x03
    1712:	82 83       	std	Z+2, r24	; 0x02
    1714:	45 2b       	or	r20, r21
    1716:	29 f4       	brne	.+10     	; 0x1722 <free+0xa2>
    1718:	f0 93 47 1e 	sts	0x1E47, r31
    171c:	e0 93 46 1e 	sts	0x1E46, r30
    1720:	42 c0       	rjmp	.+132    	; 0x17a6 <free+0x126>
    1722:	13 96       	adiw	r26, 0x03	; 3
    1724:	fc 93       	st	X, r31
    1726:	ee 93       	st	-X, r30
    1728:	12 97       	sbiw	r26, 0x02	; 2
    172a:	ed 01       	movw	r28, r26
    172c:	49 91       	ld	r20, Y+
    172e:	59 91       	ld	r21, Y+
    1730:	9e 01       	movw	r18, r28
    1732:	24 0f       	add	r18, r20
    1734:	35 1f       	adc	r19, r21
    1736:	e2 17       	cp	r30, r18
    1738:	f3 07       	cpc	r31, r19
    173a:	71 f4       	brne	.+28     	; 0x1758 <free+0xd8>
    173c:	80 81       	ld	r24, Z
    173e:	91 81       	ldd	r25, Z+1	; 0x01
    1740:	84 0f       	add	r24, r20
    1742:	95 1f       	adc	r25, r21
    1744:	02 96       	adiw	r24, 0x02	; 2
    1746:	11 96       	adiw	r26, 0x01	; 1
    1748:	9c 93       	st	X, r25
    174a:	8e 93       	st	-X, r24
    174c:	82 81       	ldd	r24, Z+2	; 0x02
    174e:	93 81       	ldd	r25, Z+3	; 0x03
    1750:	13 96       	adiw	r26, 0x03	; 3
    1752:	9c 93       	st	X, r25
    1754:	8e 93       	st	-X, r24
    1756:	12 97       	sbiw	r26, 0x02	; 2
    1758:	e0 e0       	ldi	r30, 0x00	; 0
    175a:	f0 e0       	ldi	r31, 0x00	; 0
    175c:	d8 01       	movw	r26, r16
    175e:	12 96       	adiw	r26, 0x02	; 2
    1760:	8d 91       	ld	r24, X+
    1762:	9c 91       	ld	r25, X
    1764:	13 97       	sbiw	r26, 0x03	; 3
    1766:	00 97       	sbiw	r24, 0x00	; 0
    1768:	19 f0       	breq	.+6      	; 0x1770 <free+0xf0>
    176a:	f8 01       	movw	r30, r16
    176c:	8c 01       	movw	r16, r24
    176e:	f6 cf       	rjmp	.-20     	; 0x175c <free+0xdc>
    1770:	8d 91       	ld	r24, X+
    1772:	9c 91       	ld	r25, X
    1774:	98 01       	movw	r18, r16
    1776:	2e 5f       	subi	r18, 0xFE	; 254
    1778:	3f 4f       	sbci	r19, 0xFF	; 255
    177a:	82 0f       	add	r24, r18
    177c:	93 1f       	adc	r25, r19
    177e:	20 91 44 1e 	lds	r18, 0x1E44
    1782:	30 91 45 1e 	lds	r19, 0x1E45
    1786:	28 17       	cp	r18, r24
    1788:	39 07       	cpc	r19, r25
    178a:	69 f4       	brne	.+26     	; 0x17a6 <free+0x126>
    178c:	30 97       	sbiw	r30, 0x00	; 0
    178e:	29 f4       	brne	.+10     	; 0x179a <free+0x11a>
    1790:	10 92 47 1e 	sts	0x1E47, r1
    1794:	10 92 46 1e 	sts	0x1E46, r1
    1798:	02 c0       	rjmp	.+4      	; 0x179e <free+0x11e>
    179a:	13 82       	std	Z+3, r1	; 0x03
    179c:	12 82       	std	Z+2, r1	; 0x02
    179e:	10 93 45 1e 	sts	0x1E45, r17
    17a2:	00 93 44 1e 	sts	0x1E44, r16
    17a6:	df 91       	pop	r29
    17a8:	cf 91       	pop	r28
    17aa:	1f 91       	pop	r17
    17ac:	0f 91       	pop	r16
    17ae:	08 95       	ret

000017b0 <_exit>:
    17b0:	f8 94       	cli

000017b2 <__stop_program>:
    17b2:	ff cf       	rjmp	.-2      	; 0x17b2 <__stop_program>
